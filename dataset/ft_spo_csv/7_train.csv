input,subject,subject_type,data/object,relation,object,object_type
本章旨在全面系统地介绍以RDF为数据模型的知识图谱语义搜索基础技术以及面临的挑战。,知识图谱,知识图谱,,包含,语义搜索,语义搜索
7.1语义搜索简介搜索也称信息检索（Information_Retrieval），是从信息资源集合获得与信息需求相关的信息资源的活动[1]。,语义搜索,语义搜索,,等价,信息检索,语义搜索
7.1语义搜索简介搜索也称信息检索（Information_Retrieval），是从信息资源集合获得与信息需求相关的信息资源的活动[1]。,语义搜索,语义搜索,属性,被定义为,从信息资源集合获得与信息需求相关的信息资源的活动,文本
其中，最广泛的信息检索主要是面向文档为单位的检索（Document_Retrieval）。,信息检索,语义搜索,,包含,面向文档为单位的检索,语义搜索
此外，面向数据的检索（Data_Retrieval）也受到越来越多的关注，主要包括基于数据库的检索和基于知识库的检索，其特点是能够提供更精确的答案[5]。,信息检索,语义搜索,,包含,面向数据的检索,语义搜索
此外，面向数据的检索（Data_Retrieval）也受到越来越多的关注，主要包括基于数据库的检索和基于知识库的检索，其特点是能够提供更精确的答案[4]。,面向数据的检索,语义搜索,,包含,基于数据库的检索,语义搜索
此外，面向数据的检索（Data_Retrieval）也受到越来越多的关注，主要包括基于数据库的检索和基于知识库的检索，其特点是能够提供更精确的答案[5]。,面向数据的检索,语义搜索,,包含,基于知识库的检索,语义搜索
此外，面向数据的检索（Data_Retrieval）也受到越来越多的关注，主要包括基于数据库的检索和基于知识库的检索，其特点是能够提供更精确的答案[5]。,面向数据的检索,语义搜索,属性,特点,能够提供更精确的答案,文本
面向文档的信息检索主要通过轻量级的语法模型（Lightweight_Syntax-Centric_Model）表示用户的检索需求和资源的内容，即目前占主导地位的关键词模式——词袋模型（Bag-of-Words）。,面向文档的信息检索,语义搜索,,方法,轻量级的语法模型,语义搜索
面向文档的信息检索主要通过轻量级的语法模型（Lightweight_Syntax-Centric_Model）表示用户的检索需求和资源的内容，即目前占主导地位的关键词模式——词袋模型（Bag-of-Words）。,轻量级的语法模型,语义搜索,,包含,词袋模型,语义搜索
面向文档的信息检索主要通过轻量级的语法模型（Lightweight_Syntax-Centric_Model）表示用户的检索需求和资源的内容，即目前占主导地位的关键词模式——词袋模型（Bag-of-Words）。,轻量级的语法模型,语义搜索,属性,英文名,Lightweight_Syntax-Centric_Model,文本
面向文档的信息检索主要通过轻量级的语法模型（Lightweight_Syntax-Centric_Model）表示用户的检索需求和资源的内容，即目前占主导地位的关键词模式——词袋模型（Bag-of-Words）。,词袋模型,语义搜索,属性,英文名,Bag-of-Words,文本
这种技术对主题搜索（Topic_Search）的效果很好，即给定一个主题检索相关的文档，但不能应对更加复杂的信息检索需求。,轻量级的语法模型,语义搜索,属性,特点,对主题搜索的效果很好，但不能应对更加复杂的信息检索需求,文本
显然，基于数据库和基于知识库的检索系统属于重量级语义搜索系统，因为它们采用显式的和形式化的模型，例如关系数据库中的E-R图、RDF和OWL中的知识模型。,基于数据库的检索系统,语义搜索,,属于,重量级语义搜索系统,语义搜索
显然，基于数据库和基于知识库的检索系统属于重量级语义搜索系统，因为它们采用显式的和形式化的模型，例如关系数据库中的E-R图、RDF和OWL中的知识模型。,基于知识库的检索系统,语义搜索,,属于,重量级语义搜索系统,语义搜索
如图7-1所示，一个语义搜索系统的基本框架包括查询构建、查询处理、结果展示、查询优化、语义模型、资源及文档等。,语义搜索系统框架,语义搜索,,包含,查询构建,语义搜索
如图7-1所示，一个语义搜索系统的基本框架包括查询构建、查询处理、结果展示、查询优化、语义模型、资源及文档等。,语义搜索系统框架,语义搜索,,包含,查询处理,语义搜索
如图7-1所示，一个语义搜索系统的基本框架包括查询构建、查询处理、结果展示、查询优化、语义模型、资源及文档等。,语义搜索系统框架,语义搜索,,包含,结果展示,语义搜索
如图7-1所示，一个语义搜索系统的基本框架包括查询构建、查询处理、结果展示、查询优化、语义模型、资源及文档等。,语义搜索系统框架,语义搜索,,包含,查询优化,语义搜索
如图7-1所示，一个语义搜索系统的基本框架包括查询构建、查询处理、结果展示、查询优化、语义模型、资源及文档等。,语义搜索系统框架,语义搜索,,包含,语义模型,语义搜索
如图7-1所示，一个语义搜索系统的基本框架包括查询构建、查询处理、结果展示、查询优化、语义模型、资源及文档等。,语义搜索系统框架,语义搜索,,包含,资源及文档,语义搜索
SPARQL查询语言是面向RDF图的结构化查询语言，目前已被W3C推荐为RDF数据的标准查询语言[2]，其地位和查询形式都类似于关系数据库的SQL语言。,SPARQL查询语言,语义搜索,属性,被定义为,面向RDF图的结构化查询语言,文本
SPARQL查询的核心处理单元是类似RDF三元组形式的三元组模式（TriplePattern），不同之处在于SPARQL的三元组模式中，主语、谓语或宾语可以是变量（以“?”开头标识）。,SPARQL查询语言,语义搜索,属性,特点,核心处理单元是类似RDF三元组形式的三元组模式，但主语、谓语或宾语可以是变量,文本
除此之外，SPARQL查询还定义了多个基本图模式之间进行的运算操作，以及基本图模式与RDF图匹配完成后的结果过滤操作（Filter_Operator），如可以用？date大于1990（?date>1990）对前面一个查询例子中的电影日期进行限制。,SPARQL查询语言,语义搜索,,实现,基本图模式之间进行的运算操作,语义搜索
除此之外，SPARQL查询还定义了多个基本图模式之间进行的运算操作，以及基本图模式与RDF图匹配完成后的结果过滤操作（Filter_Operator），如可以用？date大于1990（?date>1990）对前面一个查询例子中的电影日期进行限制。,SPARQL查询语言,语义搜索,,实现,基本图模式与RDF图匹配完成后的结果过滤操作,语义搜索
最后，在SPARQL1.1版本中，还增加了联合查询功能，即支持通过FROM和嵌套查询的方式，进>行多个数据源联合查询。,SPARQL查询语言,语义搜索,,实现,联合查询功能,语义搜索
下面将以图7-2中的样例知识图谱和对应的SPARQL查询实例，分别介绍如何使用SPARQL对知识图谱进行数据查询、数据插入以及数据删除操作。,SPARQL查询语言,语义搜索,,包含,数据查询,语义搜索
下面将以图7-2中的样例知识图谱和对应的SPARQL查询实例，分别介绍如何使用SPARQL对知识图谱进行数据查询、数据插入以及数据删除操作。,SPARQL查询语言,语义搜索,,包含,数据插入,语义搜索
下面将以图7-2中的样例知识图谱和对应的SPARQL查询实例，分别介绍如何使用SPARQL对知识图谱进行数据查询、数据插入以及数据删除操作。,SPARQL查询语言,语义搜索,,包含,数据删除,语义搜索
7.2.1数据查询SPARQL官方标准定义了四种最终返回给用户查询结果的形式，代表着四种基本的查询功能，即SELECT、ASK、CONSTRUCT和DESCRIBE。,数据查询,语义搜索,,包含,SELECT,语义搜索
7.2.1数据查询SPARQL官方标准定义了四种最终返回给用户查询结果的形式，代表着四种基本的查询功能，即SELECT、ASK、CONSTRUCT和DESCRIBE。,数据查询,语义搜索,,包含,ASK,语义搜索
7.2.2数据查询SPARQL官方标准定义了四种最终返回给用户查询结果的形式，代表着四种基本的查询功能，即SELECT、ASK、CONSTRUCT和DESCRIBE。,数据查询,语义搜索,,包含,CONSTRUCT,语义搜索
7.2.3数据查询SPARQL官方标准定义了四种最终返回给用户查询结果的形式，代表着四种基本的查询功能，即SELECT、ASK、CONSTRUCT和DESCRIBE。,数据查询,语义搜索,,包含,DESCRIBE,语义搜索
其中，SELECT是唯一可以返回知识图谱中图模式匹配具体结果给用户的形式，也是最常用的查询语句；ASK查询语句主要用于测试知识图谱中是否存在满足给定查询约束条件的数据，结果以Yes或No的形式返回，除此之外没有额外的信息返回；CONSTRUCT查询语句主要用于将图模式匹配结果生成新的RDF图；DESCRIBE查询语句用于查询与指定IRI相关的数据，注意和SELECT有区别。,SELECT,语义搜索,属性,被定义为,返回知识图谱中图模式匹配具体结果给用户的形式,文本
其中，SELECT是唯一可以返回知识图谱中图模式匹配具体结果给用户的形式，也是最常用的查询语句；ASK查询语句主要用于测试知识图谱中是否存在满足给定查询约束条件的数据，结果以Yes或No的形式返回，除此之外没有额外的信息返回；CONSTRUCT查询语句主要用于将图模式匹配结果生成新的RDF图；DESCRIBE查询语句用于查询与指定IRI相关的数据，注意和SELECT有区别。,ASK,语义搜索,属性,被定义为,测试知识图谱中是否存在满足给定查询约束条件的数据，结果以Yes或No的形式返回,文本
其中，SELECT是唯一可以返回知识图谱中图模式匹配具体结果给用户的形式，也是最常用的查询语句；ASK查询语句主要用于测试知识图谱中是否存在满足给定查询约束条件的数据，结果以Yes或No的形式返回，除此之外没有额外的信息返回；CONSTRUCT查询语句主要用于将图模式匹配结果生成新的RDF图；DESCRIBE查询语句用于查询与指定IRI相关的数据，注意和SELECT有区别。,CONSTRUCT,语义搜索,属性,被定义为,将图模式匹配结果生成新的RDF图,文本
其中，SELECT是唯一可以返回知识图谱中图模式匹配具体结果给用户的形式，也是最常用的查询语句；ASK查询语句主要用于测试知识图谱中是否存在满足给定查询约束条件的数据，结果以Yes或No的形式返回，除此之外没有额外的信息返回；CONSTRUCT查询语句主要用于将图模式匹配结果生成新的RDF图；DESCRIBE查询语句用于查询与指定IRI相关的数据，注意和SELECT有区别。,DESCRIBE,语义搜索,属性,被定义为,查询与指定IRI相关的数据,文本
1.SELECT的基本语法其中，“SELECT”指明了查询的形式。“SELECT”后面的“变量1变量2…”表示图匹配后想要查询的具体目标。“FROM”指明了数据源，在通常情况下，在单个知识图谱中查询时，默认不指明数据集的名称，即可以省略SPARQL查询中的FROM字段（后续其他形式的查询语句介绍中将不再提及FROM部分）。“WHERE”语句后面的大括号中就是具体的基本图模式和约束条件（FILTER字段给出）。值得注意的是，“WHERE”语句后面至少应该包含一个基本图模式（在查询语法中，不同的三元组模式在大括号中用英文句点“.”间隔），而约束条件为可选项。最后的修饰符[5]（Modifier）同样是可选项，主要用于对查询的结果进行一些处理，常见的有排序操作ORDER、限制结果数量操作LIMIT等。,SELECT,语义搜索,属性,语法,SELECT变量1变量2…FROM 数据源WHERE{基本图模式[过滤条件]} [修饰符]。其中“SELECT”指明了查询的形式。SELECT后面的变量1变量2…表示图匹配后想要查询的具体目标。FROM指明了数据源。WHERE语句后面的大括号中就是具体的基本图模式和约束条件（FILTER字段给出）。最后的修饰符同样是可选项，主要用于对查询的结果进行一些处理，常见的有排序操作ORDER、限制结果数量操作LIMIT等。,文本
图7-3典型的SELECT查询2.ASK的基本语法其中，“ASK”指明了查询的形式。“ASK”后面的内容和SELECT中的“WHERE”部分类似。,ASK,语义搜索,属性,语法,ASK{基本图模式[条件约束]}。ASK指明了查询的形式，ASK后面的内容和SELECT中的WHERE部分类似,文本
3.CONSTRUCT的基本语法其中，“CONSTRUCT”指明了查询的形式。“CONSTRUCT”后面的“图模板”类似于基本图模式，指明了生成的RDF应该具有的基本三元组内容。而“WHERE”语句后面的基本图模式和SELECT语句中的类似，用于图模式匹配和约束。而“WHERE”语句后面的基本图模式和SELECT语句中的类似，用于图模式匹配和约束。,CONSTRUCT,语义搜索,属性,语法,CONSTRUCT{图模版}WHERE{基本图模式{条件约束}}。“CONSTRUCT”指明了查询的形式。“CONSTRUCT”后面的“图模板”类似于基本图模式，指明了生成的RDF应该具有的基本三元组内容。,文本
SPARQL支持通过INSERT_DATA语句，将新的RDF三元组插入已有的RDF图中。,数据插入,语义搜索,,包含,INSERT_DATA,语义搜索
SPARQL支持通过INSERT_DATA语句，将新的RDF三元组插入已有的RDF图中。,INSERT_DATA,语义搜索,属性,被定义为,将新的RDF三元组插入已有的RDF图中,文本
具体的基本语法为：其中，INSERT_DATA指明了查询的形式。在INSERT_DATA后面可以是单条三元组，也可以是多条三元组构成的RDF图。在查询语法中，英文分号“;”可以用来连续插入头实体相同的三元组。,INSERT_DATA,语义搜索,属性,语法,INSERT_DATA{RDF三元组(RDF图)}。INSERT_DATA指明了查询的形式。在INSERT_DATA后面可以是单条三元组，也可以是多条三元组构成的RDF图。在查询语法中，英文分号“;”可以用来连续插入头实体相同的三元组。,文本
7.2.3数据删除SPARQL的删除语句支持通过DELETE_DATA语句将RDF图中已有的某些三元组删除。,数据删除,语义搜索,,包含,DELETE_DATA,语义搜索
具体的基本语法为：其中，DELETE_DATA指明了查询的形式。与插入语句类似，在DELETE_DATA后可以是单条三元组，也可以是多条三元组构成的RDF图。,DELETE_DATA,语义搜索,属性,语法,DELETE_DATA{RDF三元组(RDF图)}。其中，DELETE_DATA指明了查询的形式。在DELETE_DATA后可以是单条三元组，也可以是多条三元组构成的RDF图。,文本
7.3语义数据搜索目前，得益于W3C完成RDF语言和协议的标准化，互联网上的不同RDF数据能够以RDF链接的形式链接在一起，形成一个完整的语义链接数据网络，也称作数据Web。,数据Web,语义搜索,属性,被定义为,互联网上的不同RDF数据能够以RDF链接的形式链接在一起，形成一个完整的语义链接数据网络,文本
当前，链接数据比较成熟的语义搜索主要包括：面向本体的搜索引擎，如Swoogle[8]、Watson[9]；面向实体的搜索引擎，如Sigma_on_Sindice[10]、FalconS[11]；以及面向细粒度数据Web的搜索引擎，如SWSE[12]、Hermes（SearchWebDB）[13]。,语义搜索,语义搜索,,包含,面向本体的搜索引擎,语义搜索
当前，链接数据比较成熟的语义搜索主要包括：面向本体的搜索引擎，如Swoogle[8]、Watson[9]；面向实体的搜索引擎，如Sigma_on_Sindice[10]、FalconS[11]；以及面向细粒度数据Web的搜索引擎，如SWSE[12]、Hermes（SearchWebDB）[14]。,语义搜索,语义搜索,,包含,面向实体的搜索引擎,语义搜索
当前，链接数据比较成熟的语义搜索主要包括：面向本体的搜索引擎，如Swoogle[8]、Watson[9]；面向实体的搜索引擎，如Sigma_on_Sindice[10]、FalconS[11]；以及面向细粒度数据Web的搜索引擎，如SWSE[12]、Hermes（SearchWebDB）[15]。,语义搜索,语义搜索,,包含,面向细粒度数据Web的搜索引擎,语义搜索
这些搜索引擎的基本组成都包括三元组存储、索引构建、查询处理及排序等，具体内容如下：1.三元组存储基于IR的存储方式，即单一的数据结构和查询算法，针对文本数据进行排序检索来优化。,语义搜索引擎,语义搜索,,由组成,三元组存储,语义搜索
这些搜索引擎的基本组成都包括三元组存储、索引构建、查询处理及排序等，具体内容如下：1.三元组存储基于IR的存储方式，即单一的数据结构和查询算法，针对文本数据进行排序检索来优化。,语义搜索引擎,语义搜索,,由组成,索引构建,语义搜索
这些搜索引擎的基本组成都包括三元组存储、索引构建、查询处理及排序等，具体内容如下：2.三元组存储基于IR的存储方式，即单一的数据结构和查询算法，针对文本数据进行排序检索来优化。,语义搜索引擎,语义搜索,,由组成,查询处理及排序,语义搜索
1.三元组存储基于IR的存储方式，即单一的数据结构和查询算法，针对文本数据进行排序检索来优化。,三元组存储,语义搜索,,包含,基于IR的存储方式,语义搜索
1.三元组存储基于IR的存储方式，即单一的数据结构和查询算法，针对文本数据进行排序检索来优化。,基于IR的存储方式,语义搜索,属性,被定义为,单一的数据结构和查询算法，针对文本数据进行排序检索来优化,文本
其优点是高度可压缩、可访问，且排序是整个存储索引的组成部分，缺点是不能处理结构化查询中简单的选择、联结等操作。,基于IR的存储方式,语义搜索,属性,特点,高度可压缩、可访问，且排序是整个存储索引的组成部分,文本
其优点是高度可压缩、可访问，且排序是整个存储索引的组成部分，缺点是不能处理结构化查询中简单的选择、联结等操作。,基于IR的存储方式,语义搜索,属性,缺点,不能处理结构化查询中简单的选择、联结等操作,文本
1.三元组存储基于DB的存储方式,三元组存储,语义搜索,,包含,基于DB的存储方式,语义搜索
基于DB的存储方式，即多种索引和查询算法，以适应各种结构化数据的复杂查询需求。,基于DB的存储方式,语义搜索,属性,被定义为,多种索引和查询算法，以适应各种结构化数据的复杂查询需求,文本
其优点是能够完成复杂的选择、联结等操作，进而支持SPARQL结构化查询，并且能应对高动态场景（许多插入或删除），缺点是空间开销增大和访问有一定的局限性，并且无法集成对检索结果的排序。,基于DB的存储方式,语义搜索,属性,特点,能够完成复杂的选择、联结等操作，进而支持SPARQL结构化查询，并且能应对高动态场景,文本
其优点是能够完成复杂的选择、联结等操作，进而支持SPARQL结构化查询，并且能应对高动态场景（许多插入或删除），缺点是空间开销增大和访问有一定的局限性，并且无法集成对检索结果的排序。,基于DB的存储方式,语义搜索,属性,缺点,空间开销增大和访问有一定的局限性，并且无法集成对检索结果的排序,文本
1.三元组存储原生存储,三元组存储,语义搜索,,包含,原生存储,语义搜索
原生存储（Native_Stores）即直接以RDF图形式的存储方式。,原生存储,语义搜索,属性,被定义为,直接以RDF图形式的存储方式,文本
其优点是高度可压缩，可访问类似IR的检索排序，支持选择、联结等操作，并且可在亚秒级时间内在单台机器上完成对TB级数据的查询，以及支持高动态场景，缺点是没有事务、恢复等功能。,原生存储,语义搜索,属性,特点,高度可压缩，可访问类似IR的检索排序，支持选择、联结等操作，并且可在亚秒级时间内在单台机器上完成对TB级数据的查询，以及支持高动态场景,文本
其优点是高度可压缩，可访问类似IR的检索排序，支持选择、联结等操作，并且可在亚秒级时间内在单台机器上完成对TB级数据的查询，以及支持高动态场景，缺点是没有事务、恢复等功能。,原生存储,语义搜索,属性,缺点,没有事务、恢复等功能,文本
2.索引构建目前主要的方式都是重用IR索引来索引RDF语义数据。,索引构建,语义搜索,,包含,IR索引,语义搜索
IR索引主要包括以下几个核心概念：文档、字段（例如，标题、摘要、正文……）、词语、Posting_list和Positionlist[6]。,IR索引,语义搜索,属性,内容,文档、词语、Posting_list、Position_list,文本
而利用IR索引来索引RDF数据的核心思想是将RDF转换成具有fields和terms的虚拟文档，如图7-6所示。,IR索引,语义搜索,属性,方法,将RDF转换成具有fields和terms的虚拟文档,文本
3.查询处理和排序首先，查询处理的核心步骤是给定查询输入，将其构建成复杂的结构化查询。,查询处理及排序,语义搜索,属性,内容,给定查询输入，将其构建成复杂的结构化查询,文本
此类常见的交互范式主要包括：关键词查询、自然语言查询、分面查询、表单查询、可视化查询以及混合方式查询等[15]。,语义搜索交互范式,语义搜索,,包含,基于关键词查询,语义搜索
此类常见的交互范式主要包括：关键词查询、自然语言查询、分面查询、表单查询、可视化查询以及混合方式查询等[15]。,语义搜索交互范式,语义搜索,,包含,基于自然语言查询,语义搜索
此类常见的交互范式主要包括：关键词查询、自然语言查询、分面查询、表单查询、可视化查询以及混合方式查询等[15]。,语义搜索交互范式,语义搜索,,包含,基于分面查询,语义搜索
此类常见的交互范式主要包括：关键词查询、自然语言查询、分面查询、表单查询、可视化查询以及混合方式查询等[15]。,语义搜索交互范式,语义搜索,,包含,基于表单查询,语义搜索
此类常见的交互范式主要包括：关键词查询、自然语言查询、分面查询、表单查询、可视化查询以及混合方式查询等[15]。,语义搜索交互范式,语义搜索,,包含,基于可视化查询,语义搜索
此类常见的交互范式主要包括：关键词查询、自然语言查询、分面查询、表单查询、可视化查询以及混合方式查询等[15]。,语义搜索交互范式,语义搜索,,包含,基于混合方式查询,语义搜索
知识图谱上的关键词查询主要可以分为两类[17]：基于关键词直接在知识图谱上搜索答案；基于关键词生成结构化的查询，进而提交给查询引擎得到结果。,基于关键词查询,语义搜索,,包含,基于关键词直接在知识图谱上搜索答案,语义搜索
知识图谱上的关键词查询主要可以分为两类[18]：基于关键词直接在知识图谱上搜索答案；基于关键词生成结构化的查询，进而提交给查询引擎得到结果。,基于关键词查询,语义搜索,,包含,基于关键词生成结构化的查询,语义搜索
1.基于关键词直接在知识图谱上搜索答案将关键词在知识图谱上直接进行搜索的方法，其核心思想是采用知识图谱子图定位的策略。,基于关键词直接在知识图谱上搜索答案,语义搜索,属性,被定义为,采用知识图谱子图定位的策略,文本
基本流程是建立有效的关键词和知识图谱子图的索引，对于给定的关键字查询，首先在索引上匹配得到候选的知识图谱子图，进而实现对搜索空间的剪枝。,基于关键词直接在知识图谱上搜索答案,语义搜索,属性,内容,建立有效的关键词和知识图谱子图的索引，对于给定的关键字查询，首先在索引上匹配得到候选的知识图谱子图，进而实现对搜索空间的剪枝。最后，在小范围的知识图谱子图上进行搜索，找到最终的查询答案。,文本
该类方法的核心在于索引的构建，其构建方式直接决定搜索的效率和结果的质量。,基于关键词直接在知识图谱上搜索答案,语义搜索,,包含,索引的构建,语义搜索
常见的索引方式有：（1）关键词倒排索引。,索引的构建,语义搜索,,包含,关键词倒排索引,语义搜索
通过构建索引，快速定位知识图谱中包含关键词的实体。,关键词倒排索引,语义搜索,属性,被定义为,通过构建索引，快速定位知识图谱中包含关键词的实体。,文本
（2）摘要索引。,索引的构建,语义搜索,,包含,摘要索引,语义搜索
主要是构建一些包含结构化查询实体和关系类别的索引，在线上处理时根据类别摘要进行扩充。,摘要索引,语义搜索,属性,被定义为,构建一些包含结构化查询实体和关系类别的索引，在线上处理时根据类别摘要进行扩充,文本
（3）路径索引。,索引的构建,语义搜索,,包含,路径索引,语义搜索
主要借助关键词中包含的查询起始和终止结点，在图上按路径搜索提高查询效率。,路径索引,语义搜索,属性,被定义为,借助关键词中包含的查询起始和终止结点，在图上按路径搜索提高查询效率,文本
基于关键词直接在知识图谱上搜索答案主要可以解决简单的语义搜索，即查询答案仅仅出现在单条知识图谱三元组中，对于复杂的语义查询往往无法适用。,基于关键词直接在知识图谱上搜索答案,语义搜索,属性,特点,可以解决简单的语义搜索,文本
2.基于关键词生成结构化的查询将关键词集合转化为结构化的查询方法主要包括三个步骤：（1）关键词映射。,基于关键词生成结构化的查询,语义搜索,,包含,关键词映射,语义搜索
（2）候选结构化查询构建。,基于关键词生成结构化的查询,语义搜索,,包含,候选结构化查询构建,语义搜索
（3）候选结构化查询排序。,基于关键词生成结构化的查询,语义搜索,,包含,候选结构化查询排序,语义搜索
7.4.2基于分面的知识图谱语义搜索分面（Facet）概念最早是由“印度图书馆学之父”S.R.Ranganathan提出来的，用于表示图书文献的多维属性，并在此基础上提出了第一种图书分面分类法——冒号分类法（Colon_Classification)。,基于分面的知识图谱语义搜索,语义搜索,,包含,分面,语义搜索
7.4.2基于分面的知识图谱语义搜索分面（Facet）概念最早是由“印度图书馆学之父”S.R.Ranganathan提出来的，用于表示图书文献的多维属性，并在此基础上提出了第一种图书分面分类法——冒号分类法（Colon_Classification)。典型的定义将分面描述为属性或一组分类体系（category），或将分面定义为某个主题的维度或侧面。,分面,语义搜索,属性,被定义为,属性或一组分类体系或某个主题的维度或侧面,文本
值得一提的是，一些高级的分面搜索系统还需要具备以下特征：（1）考虑特定领域的分面、分面值和计数。,高级分面搜索系统,语义搜索,属性,特点,考虑特定领域的分面、分面值和计数；支持全面的浏览；支持动态分面和值的聚类,文本
知识图谱表示学习旨在通过机器学习技术，将知识图谱中的实体和关系投射到连续低维的向量空间中，同时保持原有知识图谱的基本结构和性质[20]。,知识图谱表示学习,语义搜索,属性,目标,将知识图谱中的实体和关系投射到连续低维的向量空间中，同时保持原有知识图谱的基本结构和性质,文本
通过知识图谱表示学习技术，将其投射到低维连续的向量空间中，对于语义搜索领域主要有两个好处。一是在连续向量空间中，可以直接进行数值型计算，对查询术语或者关键字进行扩展，效率极高。二是低维连续的知识图谱向量表示是通过机器学习技术学习得到的，其学习过程既考虑了知识图谱的局部特征，又考虑了全局特征，生成的实体和关系的向量在本质上是一种蕴涵语义更丰富的表示，可以进行高效率的简单查询推理。,知识图谱表示学习,语义搜索,属性,特点,连续向量空间中，可以直接进行数值型计算，对查询术语或者关键字进行扩展，效率极高。生成的实体和关系的向量在本质上是一种蕴涵语义更丰富的表示，可以进行高效率的简单查询推理。,文本
下面从基于表示学习的结构化语义查询和基于表示学习的自然语言语义查询两个方面，介绍知识图谱表示学习技术可以带来哪些改进。,知识图谱表示学习,语义搜索,,包含,基于表示学习的结构化语义查询,语义搜索
下面从基于表示学习的结构化语义查询和基于表示学习的自然语言语义查询两个方面，介绍知识图谱表示学习技术可以带来哪些改进。,知识图谱表示学习,语义搜索,,包含,基于表示学习的自然语言语义查询,语义搜索
1.基于表示学习的结构化语义查询表示学习在结构化语义查询的应用主要是可以有效、高速地进行近似语义搜索。,基于表示学习的结构化语义查询,语义搜索,属性,特点,有效、高速地进行近似语义搜索,文本
2.基于表示学习的自然语言语义查询自然语言形式的语义查询的核心在于短语（phrase）到知识图谱上实体或边的映射，进而生成结构化的查询。,基于表示学习的自然语言语义查询,语义搜索,属性,特点,短语到知识图谱上实体或边的映射，进而生成结构化的查询,文本