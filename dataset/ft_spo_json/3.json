{"text": "本章首先介绍图数据模型和图查询语言等基本知识；以演示操作的方式讲解各种主流知识图谱数据库，包括基于关系数据库的存储方案、面向RDF的三元组数据库和原生图数据库；以图数据库Neo4j为例介绍图模型数据的底层存储细节，同时梳理图数据索引和查询处理等关键技术；最后，以Apache_Jena为例，针对知识图谱数据库开源工具进行实践。", "relation": [{"head": "知识图谱数据库", "head_type": "概念", "relation": "包含", "tail": "基于关系数据库的存储方案", "tail_type": "概念"}, {"head": "知识图谱数据库", "head_type": "概念", "relation": "包含", "tail": "面向RDF的三元组数据库", "tail_type": "概念"}, {"head": "知识图谱数据库", "head_type": "概念", "relation": "包含", "tail": "原生图数据库", "tail_type": "概念"}]}
{"text": "3.1知识图谱数据库基本知识本节首先介绍目前表示知识图谱的两种主要图数据模型：RDF图和属性图。", "relation": [{"head": "图数据模型", "head_type": "概念", "relation": "包含", "tail": "RDF图", "tail_type": "概念"}, {"head": "图数据模型", "head_type": "概念", "relation": "包含", "tail": "属性图", "tail_type": "概念"}]}
{"text": "3.1.1知识图谱数据模型从数据模型角度来看，知识图谱本质上是一种图数据。", "relation": [{"head": "知识图谱", "head_type": "概念", "relation": "被定义为", "tail": "一种图数据", "tail_type": "概念"}]}
{"text": "知识图谱数据模型的数学基础源于有着近300年历史的数学分支——图论。", "relation": [{"head": "知识图谱数据模型", "head_type": "概念", "relation": "源于", "tail": "图论", "tail_type": "概念"}]}
{"text": "知识图谱数据模型基于图论中图的定义，用节点集合表示实体，用边集合表示实体间的联系，这种一般和通用的数据表示恰好能够自然地刻画现实世界中事物的广泛联系。", "relation": [{"head": "知识图谱数据模型", "head_type": "概念", "relation": "依靠", "tail": "图论中图的定义", "tail_type": "概念"}, {"head": "节点集合", "head_type": "概念", "relation": "实现", "tail": "实体", "tail_type": "概念"}, {"head": "边集合", "head_type": "概念", "relation": "实现", "tail": "实体间的联系", "tail_type": "概念"}]}
{"text": "1.RDF图RDF是W3C制定的在语义万维网上表示和交换机器可理解信息的标准数据模型[1]。", "relation": [{"head": "RDF图RDF", "head_type": "概念", "relation": "属于", "tail": "W3C制定的在语义万维网上表示和交换机器可理解信息的标准数据模型", "tail_type": "概念"}]}
{"text": "在RDF三元组集合中，每个Web资源具有一个HTTP_URI作为其唯一的id；一个RDF图定义为三元组(s,p,o)的有限集合；每个三元组代表一个陈述句，其中s是主语，p是谓语，o是宾语；(s,p,o)表示资源s与资源o之间具有联系p，或表示资源s具有属性p且其取值为o。", "relation": [{"head": "RDF图", "head_type": "概念", "relation": "被定义为", "tail": "三元组(s,p,o)的有限集合", "tail_type": "概念"}, {"head": "三元组(s,p,o)", "head_type": "概念", "relation": "等价", "tail": "一个陈述句", "tail_type": "概念"}, {"head": "陈述句", "head_type": "概念", "relation": "包含", "tail": "s主语", "tail_type": "概念"}, {"head": "陈述句", "head_type": "概念", "relation": "包含", "tail": "p谓语", "tail_type": "概念"}, {"head": "陈述句", "head_type": "概念", "relation": "包含", "tail": "o宾语", "tail_type": "概念"}]}
{"text": "实际上，RDF三元组集合即为图中的有向边集合。", "relation": [{"head": "RDF三元组集合", "head_type": "概念", "relation": "等价", "tail": "图中的有向边集合", "tail_type": "概念"}]}
{"text": "节点属性可用三元组表示，这类三元组的宾语称为字面量，即图中的矩形。", "relation": [{"head": "节点属性", "head_type": "概念", "relation": "依靠", "tail": "三元组", "tail_type": "概念"}, {"head": "三元组的宾语", "head_type": "概念", "relation": "等价", "tail": "字面量", "tail_type": "概念"}]}
{"text": "1.SPARQLSPARQL是W3C制定的RDF图数据的标准查询语言[4]。", "relation": [{"head": "SPARQL", "head_type": "产品", "relation": "属于", "tail": "W3C制定的RDF图数据的标准查询语言[4]", "tail_type": "概念"}]}
{"text": "SPARQL从语法上借鉴了SQL，同样属于声明式查询语言。", "relation": [{"head": "SPARQL", "head_type": "产品", "relation": "源于", "tail": "SQL", "tail_type": "产品"}, {"head": "SPARQL", "head_type": "产品", "relation": "属于", "tail": "声明式查询语言", "tail_type": "概念"}]}
{"text": "最新的SPARQL1.1版本为有效查询RDF图专门设计了三元组模式、子图模式、属性路径等多种查询机制。", "relation": [{"head": "SPARQL", "head_type": "产品", "relation": "实现", "tail": "三元组模式查询机制", "tail_type": "概念"}, {"head": "SPARQL", "head_type": "产品", "relation": "实现", "tail": "子图模式查询机制", "tail_type": "概念"}, {"head": "SPARQL", "head_type": "产品", "relation": "实现", "tail": "属性路径查询机制", "tail_type": "概念"}]}
{"text": "三元组模式查询是最基本的SPARQL查询。", "relation": [{"head": "三元组模式查询", "head_type": "概念", "relation": "属于", "tail": "SPARQL查询", "tail_type": "概念"}]}
{"text": "实际上，BGP查询相当于一个带有变量的查询图，查询过程是在数据图中寻找与查询图映射Isomorphism）或子图同态匹配的所有子图，等价于图论中的子图同构（Subgraph_Homomorphism）问题[5]，所以也将BGP查询称为子图匹配查询。", "relation": [{"head": "BGP查询", "head_type": "概念", "relation": "等价", "tail": "一个带有变量的查询图", "tail_type": "概念"}]}
{"text": "2.CypherCypher最初是图数据库Neo4j中实现的属性图数据查询语言[15]。", "relation": [{"head": "Cypher", "head_type": "产品", "relation": "属于", "tail": "属性图数据查询语言", "tail_type": "概念"}]}
{"text": "3.GremlinGremlin是Apache_TinkerPop图计算框架[21]提供的属性图查询语言[22]。", "relation": [{"head": "Gremlin", "head_type": "产品", "relation": "属于", "tail": "属性图查询语言", "tail_type": "概念"}]}
{"text": "ApacheTinkerPop被设计为访问图数据库的通用API接口，其作用类似于关系数据库上的JDBC接口。", "relation": [{"head": "ApacheTinkerPop", "head_type": "产品", "relation": "属于", "tail": "访问图数据库的通用API接口", "tail_type": "概念"}]}
{"text": "Gremlin的定位是图遍历语言，其执行机制好比是一个人置身于图中沿着有向边，从一个节点到另一个节点进行导航式的游走。", "relation": [{"head": "Gremlin", "head_type": "产品", "relation": "属于", "tail": "图遍历语言", "tail_type": "概念"}]}
{"text": "这种执行方式决定了用户使用Gremlin需要指明具体的导航步骤，这和自己驾驶汽车到一个目的地需要知道行车路线是一个道理，所以将Gremlin归为过程式语言，即需要明确“怎么做”。", "relation": [{"head": "Gremlin", "head_type": "产品", "relation": "属于", "tail": "过程式语言", "tail_type": "概念"}]}
{"text": "3.2常见知识图谱存储方法本节介绍三类知识图谱数据库：基于关系数据库的存储方案、面向RDF的三元组数据库和原生图数据库，多数系统给出了演示操作步骤。", "relation": [{"head": "知识图谱数据库", "head_type": "概念", "relation": "包含", "tail": "基于关系数据库的存储方案", "tail_type": "概念"}, {"head": "知识图谱数据库", "head_type": "概念", "relation": "包含", "tail": "面向RDF的三元组数据库", "tail_type": "概念"}, {"head": "知识图谱数据库", "head_type": "概念", "relation": "包含", "tail": "原生图数据库", "tail_type": "概念"}]}
{"text": "商业数据库包括Oracle、DB2和SQL_Server等，开源数据库包括PostgreSQL和MySQL等。", "relation": [{"head": "商业数据库", "head_type": "概念", "relation": "包含", "tail": "Oracle", "tail_type": "产品"}, {"head": "商业数据库", "head_type": "概念", "relation": "包含", "tail": "DB2", "tail_type": "产品"}, {"head": "商业数据库", "head_type": "概念", "relation": "包含", "tail": "SQL_Server", "tail_type": "产品"}, {"head": "开源数据库", "head_type": "概念", "relation": "包含", "tail": "PostgreSQL", "tail_type": "产品"}, {"head": "开源数据库", "head_type": "概念", "relation": "包含", "tail": "MySQL", "tail_type": "产品"}]}
{"text": "基于关系数据库的存储方案是目前知识图谱采用的一种主要存储方法。", "relation": [{"head": "基于关系数据库的存储方案", "head_type": "概念", "relation": "属于", "tail": "知识图谱存储方法", "tail_type": "概念"}]}
{"text": "本小节将按照时间发展顺序简要介绍各种基于关系表的知识图谱存储结构，包括三元组表、水平表、属性表、垂直划分、六重索引和DB2RDF。", "relation": [{"head": "基于关系表的知识图谱存储结构", "head_type": "概念", "relation": "包含", "tail": "三元组表", "tail_type": "概念"}, {"head": "基于关系表的知识图谱存储结构", "head_type": "概念", "relation": "包含", "tail": "水平表", "tail_type": "概念"}, {"head": "基于关系表的知识图谱存储结构", "head_type": "概念", "relation": "包含", "tail": "属性表", "tail_type": "概念"}, {"head": "基于关系表的知识图谱存储结构", "head_type": "概念", "relation": "包含", "tail": "垂直划分", "tail_type": "概念"}, {"head": "基于关系表的知识图谱存储结构", "head_type": "概念", "relation": "包含", "tail": "六重索引", "tail_type": "概念"}, {"head": "基于关系表的知识图谱存储结构", "head_type": "概念", "relation": "包含", "tail": "DB2RDF", "tail_type": "概念"}]}
{"text": "图3-4摘自DBpedia数据集的RDF知识图谱1.三元组表三元组表是将知识图谱存储到关系数据库的最简单、最直接的办法，就是在关系数据库中建立一张具有3列的表，该表的模式为：三元组表(主语，谓语，宾语)将知识图谱中的每条三元组存储为三元组表中的一行记录。", "relation": [{"head": "三元组表", "head_type": "概念", "relation": "被定义为", "tail": "在关系数据库中建立一张具有3列的表，该表的模式为：三元组表(主语，谓语，宾语)将知识图谱中的每条三元组存储为三元组表中的一行记录。", "tail_type": "概念"}]}
{"text": "采用三元组表存储方案的代表是RDF数据库系统3store[24]。", "relation": [{"head": "RDF数据库系统3store", "head_type": "产品", "relation": "属于", "tail": "采用三元组表存储方案", "tail_type": "概念"}]}
{"text": "实际上，水平表就相当于知识图谱的邻接表。", "relation": [{"head": "水平表", "head_type": "概念", "relation": "等价", "tail": "知识图谱的邻接表", "tail_type": "概念"}]}
{"text": "不难看出，水平表的列数是知识图谱中不同谓语的数量，行数是知识图谱中不同主语的数量。", "relation": [{"head": "水平表的列数", "head_type": "概念", "relation": "被定义为", "tail": "知识图谱中不同谓语的数量", "tail_type": "概念"}, {"head": "水平表的行数", "head_type": "概念", "relation": "被定义为", "tail": "知识图谱中不同主语的数量", "tail_type": "概念"}]}
{"text": "采用水平表存储方案的代表是早期的RDF数据库系统DLDB[25]。", "relation": [{"head": "采用水平表存储方案的代表", "head_type": "概念", "relation": "包含", "tail": "DLDB", "tail_type": "概念"}]}
{"text": "采用垂直划分存储方案的代表数据库是SW-Store[28]。", "relation": [{"head": "采用垂直划分存储方案", "head_type": "产品", "relation": "包含", "tail": "SW-Store", "tail_type": "产品"}]}
{"text": "使用六重索引方法的典型系统有RDF-3X[28]和Hexastore[29]。", "relation": [{"head": "六重索引方法的典型系统", "head_type": "概念", "relation": "包含", "tail": "RDF-3X", "tail_type": "产品"}, {"head": "六重索引方法的典型系统", "head_type": "概念", "relation": "包含", "tail": "Hexastore", "tail_type": "产品"}]}
{"text": "DB2RDFDB2RDF是由IBM研究中心于2013年提出的一种面向实体的RDF知识图谱存储方案[30]，该方案是以往RDF关系存储方案的一种权衡折中，既具备了三元组表、属性表和垂直划分方案的部分优点，又克服了这些方案的部分缺点。", "relation": [{"head": "DB2RDFDB2RDF", "head_type": "产品", "relation": "属于", "tail": "面向实体的RDF知识图谱存储方案", "tail_type": "概念"}]}
{"text": "主要的开源RDF三元组数据库包括：Apache旗下的Jena、Eclipse旗下的RDF4J以及源自学术界的RDF-3X和gStore；主要的商业RDF三元组数据库包括：Virtuoso、AllegroGraph、GraphDB和BlazeGraph。", "relation": [{"head": "主要的开源RDF三元组数据库", "head_type": "概念", "relation": "包含", "tail": "Apache旗下的Jena", "tail_type": "产品"}, {"head": "主要的开源RDF三元组数据库", "head_type": "概念", "relation": "包含", "tail": "Eclipse旗下的RDF4J", "tail_type": "产品"}, {"head": "主要的开源RDF三元组数据库", "head_type": "概念", "relation": "包含", "tail": "源自学术界的RDF-3X", "tail_type": "产品"}, {"head": "RDF三元组数据库", "head_type": "概念", "relation": "包含", "tail": "gStore", "tail_type": "产品"}, {"head": "RDF三元组数据库", "head_type": "概念", "relation": "包含", "tail": "Virtuoso", "tail_type": "产品"}, {"head": "RDF三元组数据库", "head_type": "概念", "relation": "包含", "tail": "AllegroGraph", "tail_type": "产品"}, {"head": "RDF三元组数据库", "head_type": "概念", "relation": "包含", "tail": "GraphDB", "tail_type": "产品"}, {"head": "RDF三元组数据库", "head_type": "概念", "relation": "包含", "tail": "BlazeGraph", "tail_type": "产品"}]}
{"text": "1.开源RDF三元组数据库RDF4JRDF4J目前是Eclipse基金会旗下的开源孵化项目，其前身是荷兰软件公司Aduna开发的Sesame框架。", "relation": [{"head": "RDF4J", "head_type": "产品", "relation": "属于", "tail": "Eclipse基金会旗下的开源孵化项目", "tail_type": "概念"}, {"head": "RDF4J", "head_type": "产品", "relation": "源于", "tail": "Sesame", "tail_type": "产品"}]}
{"text": "图3-17使用RDF4J工作台执行SPARQL查询2.开源RDF三元组数据库RDF-3XRDF-3X是由德国马克斯·普朗克计算机科学研究所研发的RDF三元组数据库系统，其最初成果发表于2008年的数据库国际会议VLDB[28]，后经功能扩展和完善，最新版本是GH-RDF3X，源代码可以从GitHub上下载。", "relation": [{"head": "RDF-3X", "head_type": "产品", "relation": "属于", "tail": "RDF三元组数据库", "tail_type": "概念"}]}
{"text": "RDF-3X采用的是一种自底向上的动态规划优化算法，其优化过程充分考虑了SPARQL查询的特点，并且最大限度地保持了有利于用全索引方案进行归并连接的连接顺序。", "relation": [{"head": "RDF-3X", "head_type": "产品", "relation": "依靠", "tail": "动态规划优化算法", "tail_type": "概念"}]}
{"text": "同时，RDF-3X还开发了基于代价模型的选择度评估（SelectivityEstimates）机制，采用选择度直方图和频繁连接路径相结合的方法进行查询执行计划的选择度评估。", "relation": [{"head": "RDF-3X", "head_type": "产品", "relation": "依靠", "tail": "基于代价模型的选择度评估机制", "tail_type": "概念"}]}
{"text": "RDF-3X是命令行程序，使用RDF-3X装载RDF文件music_1000_triples.nt的命令如图3-19所示，其中的rdf3xload是命令名称，testds是数据库名称；进行SPARQL查询的命令如图3-20所示，rdf3query是命令名称，sparql.rq是SPARQL查询文件名称。", "relation": [{"head": "RDF-3X", "head_type": "产品", "relation": "属于", "tail": "命令行程序", "tail_type": "概念"}]}
{"text": "AllegroGraph除了三元组数据库的基本功能外，还支持动态物化的RDFS++推理机、OWL2_RL推理机、Prolog规则推理系统、时空推理机制、社会网络分析库、可视化RDF图浏览器等。", "relation": [{"head": "AllegroGraph", "head_type": "产品", "relation": "包含", "tail": "动态物化的RDFS++推理机", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "包含", "tail": "OWL2_RL推理机", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "包含", "tail": "Prolog规则推理系统", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "包含", "tail": "时空推理机制", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "包含", "tail": "社会网络分析库", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "包含", "tail": "可视化RDF图浏览器", "tail_type": "概念"}]}
{"text": "6.商业RDF三元组数据库GraphDBGraphDB是RDF三元组数据库，其前身OWLIM一直是支持W3C语义Web标准的主流产品。", "relation": [{"head": "GraphDB", "head_type": "产品", "relation": "属于", "tail": "RDF三元组数据库", "tail_type": "概念"}, {"head": "GraphDB", "head_type": "产品", "relation": "源于", "tail": "OWLIM", "tail_type": "产品"}]}
{"text": "图3-27Blazegraph的Web用户界面8.商业RDF三元组数据库StardogStardog是由美国Stardog_Union公司开发的RDF三元组数据库，其首个公开发布版本是2012年2月发布的Stardog0.9。", "relation": [{"head": "Stardog", "head_type": "产品", "relation": "属于", "tail": "RDF三元组数据库", "tail_type": "概念"}]}
{"text": "虽然Stardog发布较晚，但其对OWL2推理机制具有良好的支持，同时具备全文搜索、GraphQL查询、路径查询、融合机器学习任务等功能，能够支持多种不同编程语言和Web访问接口，使得Stardog成为一个知识图谱数据存储和查询平台。", "relation": [{"head": "Stardog", "head_type": "产品", "relation": "实现", "tail": "全文搜索功能", "tail_type": "概念"}, {"head": "Stardog", "head_type": "产品", "relation": "实现", "tail": "GraphQL查询功能", "tail_type": "概念"}, {"head": "Stardog", "head_type": "产品", "relation": "实现", "tail": "路径查询功能", "tail_type": "概念"}, {"head": "Stardog", "head_type": "产品", "relation": "实现", "tail": "融合机器学习任务功能", "tail_type": "概念"}]}
{"text": "图3-29使用Stardog_Studio执行SPARQL查询3.2.3原生图数据库1.最流行的图数据库Neo4jNeo4j的1.0版本发布于2010年。", "relation": [{"head": "Neo4j", "head_type": "产品", "relation": "属于", "tail": "最流行的图数据库", "tail_type": "概念"}]}
{"text": "Neo4j基于属性图模型，其存储管理层为属性图结构中的节点、节点属性、边、边属性等设计了专门的存储方案。", "relation": [{"head": "Neo4j", "head_type": "产品", "relation": "依靠", "tail": "属性图模型", "tail_type": "概念"}]}
{"text": "同时，Neo4j还具备OLTP数据库必需的ACID事务处理功能。", "relation": [{"head": "Neo4j", "head_type": "产品", "relation": "实现", "tail": "ACID事务处理功能", "tail_type": "概念"}]}
{"text": "Neo4j浏览器是功能完善的Neo4j可视化交互式客户端工具，可以用于执行Cypher语言。", "relation": [{"head": "Neo4j", "head_type": "产品", "relation": "实现", "tail": "可视化交互式客户端工具", "tail_type": "概念"}]}
{"text": "同时，JanusGraph也是OLTP图数据库，其支持多用户并发访问和实时图遍历查询。", "relation": [{"head": "JanusGraph", "head_type": "产品", "relation": "属于", "tail": "OLTP图数据库", "tail_type": "概念"}, {"head": "OLTP图数据库", "head_type": "概念", "relation": "实现", "tail": "多用户并发访问和实时图遍历查询", "tail_type": "概念"}]}
{"text": "另一方面，JanusGraph还具备基于Hadoop_MapReduce的图分析引擎，其可以将Gremlin导航查询自动转化为MapReduce任务。", "relation": [{"head": "JanusGraph", "head_type": "概念", "relation": "依靠", "tail": "基于Hadoop_MapReduce的图分析引擎", "tail_type": "概念"}]}
{"text": "从数据管理角度来看，OrientDB是一个功能上相对全面的数据库管理系统，除对图数据基本的存储和查询外，还支持完整的事务处理ACID特性、基于多主机复制模式（Multi-Master_Replication）的分布式部署、对于多种操作系统的支持（由于使用Java开发）和数据库安全性支持等。", "relation": [{"head": "OrientDB", "head_type": "产品", "relation": "属于", "tail": "数据库管理系统", "tail_type": "概念"}, {"head": "数据库管理系统", "head_type": "概念", "relation": "实现", "tail": "完整的事务处理ACID特性", "tail_type": "概念"}, {"head": "数据库管理系统", "head_type": "概念", "relation": "实现", "tail": "基于多主机复制模式的分布式部署", "tail_type": "概念"}]}
{"text": "2.图结构索引图结构索引是为图数据中的点边结构信息建立索引的方法。", "relation": [{"head": "图结构索引", "head_type": "概念", "relation": "被定义为", "tail": "为图数据中的点边结构信息建立索引的方法", "tail_type": "概念"}]}
{"text": "大体上，图结构索引分为“基于路径的”和“基于子图的”两种。", "relation": [{"head": "图结构索引", "head_type": "概念", "relation": "包含", "tail": "基于路径的图索引", "tail_type": "概念"}, {"head": "图结构索引", "head_type": "概念", "relation": "包含", "tail": "基于子图的图索引", "tail_type": "概念"}]}
{"text": "一种典型的基于路径的图索引叫作GraphGrep[36]。", "relation": [{"head": "GraphGrep", "head_type": "产品", "relation": "属于", "tail": "基于路径的图索引", "tail_type": "概念"}]}
{"text": "3.4开源工具实践3.4.1三元组数据库Apache_Jena1.开源工具简介Apache_Jena是Apache顶级项目，其前身为惠普实验室开发的Jena工具包。", "relation": [{"head": "Apache_Jena", "head_type": "产品", "relation": "属于", "tail": "三元组数据库", "tail_type": "概念"}, {"head": "Jena工具包", "head_type": "产品", "relation": "源于", "tail": "Apache_Jena", "tail_type": "产品"}]}
{"text": "Jena具备一套原生存储引擎，可对RDF三元组进行基于磁盘或内存的存储管理；同时具有一套基于规则的推理引擎，用于执行RDFS和OWL本体推理任务。", "relation": [{"head": "Jena", "head_type": "产品", "relation": "包含", "tail": "一套原生存储引擎", "tail_type": "概念"}, {"head": "原生存储引擎", "head_type": "概念", "relation": "实现", "tail": "RDF三元组进行基于磁盘或内存的存储管理", "tail_type": "概念"}, {"head": "Jena", "head_type": "产品", "relation": "包含", "tail": "一套基于规则的推理引擎", "tail_type": "概念"}, {"head": "推理引擎", "head_type": "概念", "relation": "实现", "tail": "RDFS和OWL本体推理任务", "tail_type": "概念"}]}
{"text": "Jena对外界应用程序的API包括实现基本三元组管理功能的RDFAPI、实现RDFS和OWL本体推理功能的本体API和实现查询处理功能的SPARQL_API。", "relation": [{"head": "Jena对外界应用程序的API", "head_type": "概念", "relation": "包含", "tail": "实现查询处理功能的SPARQL_API", "tail_type": "概念"}]}
{"text": "Jena还提供了支持各种RDF三元组格式的解析器和编写器，支持的三元组格式包括：RDF/XML、Turtle、N-Triple和RDFa。", "relation": [{"head": "Jena", "head_type": "产品", "relation": "包含", "tail": "支持各种RDF三元组格式的解析器和编写器", "tail_type": "概念"}, {"head": "支持的三元组格式", "head_type": "概念", "relation": "包含", "tail": "RDF/XML", "tail_type": "概念"}, {"head": "支持的三元组格式", "head_type": "概念", "relation": "包含", "tail": "Turtle", "tail_type": "概念"}, {"head": "支持的三元组格式", "head_type": "概念", "relation": "包含", "tail": "N-Triple", "tail_type": "概念"}, {"head": "支持的三元组格式", "head_type": "概念", "relation": "包含", "tail": "RDFa", "tail_type": "概念"}]}
{"text": "图3-42Apache_Jena框架实质上，Jena是一个Java框架类库。", "relation": [{"head": "Jena", "head_type": "产品", "relation": "属于", "tail": "一个Java框架类库", "tail_type": "概念"}]}
{"text": "Jena为了用户使用方便，提供了一个名为Fuseki的独立RDF数据库Web应用程序。", "relation": [{"head": "Jena", "head_type": "产品", "relation": "包含", "tail": "一个名为Fuseki的独立RDF数据库Web应用程序", "tail_type": "产品"}]}
{"text": "Jena为了用户使用方便，提供了一个名为Fuseki的独立RDF数据库Web应用程序。", "relation": [{"head": "Jena", "head_type": "产品", "relation": "包含", "tail": "一个名为Fuseki的独立RDF数据库Web应用程序", "tail_type": "产品"}]}
{"text": "Fuseki是基于Jena的SPARQL服务器，可以作为独立的服务由命令行启动，也可以作为操作系统服务或Java_Web应用程序。", "relation": [{"head": "Fuseki", "head_type": "产品", "relation": "属于", "tail": "基于Jena的SPARQL服务器", "tail_type": "产品"}]}
{"text": "Fuseki底层存储基于TDB，具有SPARQL查询处理的Web用户界面，同时提供服务器监控和管理功能界面。", "relation": [{"head": "Fuseki底层存储", "head_type": "概念", "relation": "依靠", "tail": "TDB", "tail_type": "概念"}, {"head": "Fuseki", "head_type": "产品", "relation": "包含", "tail": "SPARQL查询处理的Web用户界面", "tail_type": "概念"}, {"head": "Fuseki", "head_type": "产品", "relation": "包含", "tail": "服务器监控界面", "tail_type": "概念"}, {"head": "Fuseki", "head_type": "产品", "relation": "包含", "tail": "管理功能界面", "tail_type": "概念"}]}
{"text": "3.其他类似工具RDF4J是Eclipse基金会旗下的开源孵化项目，其前身是荷兰软件公司Aduna开发的Sesame框架，其功能包括：RDF数据的解析、存储、推理和查询等。", "relation": [{"head": "RDF4J", "head_type": "产品", "relation": "属于", "tail": "Eclipse基金会旗下的开源孵化项目", "tail_type": "概念"}, {"head": "RDF4J", "head_type": "产品", "relation": "实现", "tail": "RDF数据的解析功能", "tail_type": "概念"}, {"head": "RDF4J", "head_type": "产品", "relation": "实现", "tail": "RDF数据的存储功能", "tail_type": "概念"}, {"head": "RDF4J", "head_type": "产品", "relation": "实现", "tail": "RDF数据的推理功能", "tail_type": "概念"}, {"head": "RDF4J", "head_type": "产品", "relation": "实现", "tail": "RDF数据的查询功能", "tail_type": "概念"}]}
{"text": "RDF4J提供内存和磁盘两种RDF存储机制，支持SPARQL1.1查询和更新语言。", "relation": [{"head": "RDF4J", "head_type": "产品", "relation": "实现", "tail": "内存RDF存储机制", "tail_type": "概念"}, {"head": "RDF4J", "head_type": "产品", "relation": "实现", "tail": "磁盘RDF存储机制", "tail_type": "概念"}]}
{"text": "gStore是由北京大学开发的基于图的RDF三元组数据库。", "relation": [{"head": "gStore", "head_type": "产品", "relation": "属于", "tail": "北京大学开发的基于图的RDF三元组数据库", "tail_type": "概念"}]}
{"text": "AllegroGraph是Franz公司开发的RDF三元组数据库。", "relation": [{"head": "AllegroGraph", "head_type": "产品", "relation": "属于", "tail": "Franz公司开发的RDF三元组数据库", "tail_type": "概念"}]}
{"text": "除了三元组数据库的基本功能，AllegroGraph_RDFS++推理机、OWL2_RL推理机、Prolog规则推理系统、时空推理机制、社会网络分析还支持动态物化的库、可视化RDF图浏览器等。", "relation": [{"head": "AllegroGraph", "head_type": "产品", "relation": "实现", "tail": "RDFS++推理机", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "实现", "tail": "OWL2_RL推理机", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "实现", "tail": "Prolog规则推理系统", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "实现", "tail": "时空推理机制", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "实现", "tail": "社会网络分析", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "实现", "tail": "动态物化的库", "tail_type": "概念"}, {"head": "AllegroGraph", "head_type": "产品", "relation": "实现", "tail": "可视化RDF图浏览器", "tail_type": "概念"}]}
{"text": "GraphDB是由Ontotext软件公司开发的RDF三元组数据库。", "relation": [{"head": "GraphDB", "head_type": "产品", "relation": "属于", "tail": "Ontotext软件公司开发的RDF三元组数据库", "tail_type": "概念"}]}
{"text": "3.4.2面向RDF的三元组数据库gStore1.开源工具简介gStore是由北京大学计算机科学技术研究所数据管理实验室自2011年开始研发的面向RDF知识图谱的开源图数据库系统，遵循Apache开源协议。", "relation": [{"head": "gStore", "head_type": "产品", "relation": "属于", "tail": "北京大学计算机科学技术研究所数据管理实验室自2011年开始研发的面向RDF知识图谱的开源图数据库系统", "tail_type": "概念"}]}
{"text": "不同于传统基于关系数据库的RDF数据管理方法，gStore原生基于图数据模型，在存储RDF数据时维持并根据其图结构构建了基于二进制位图索引的新型索引结构——VS树。", "relation": [{"head": "gStore", "head_type": "产品", "relation": "依靠", "tail": "图数据模型", "tail_type": "概念"}]}
