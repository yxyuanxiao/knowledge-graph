{"text": "第9章知识图谱应用案例王昊奋上海乐言信息科技有限公司，丁军华东理工大学知识图谱用以描述现实世界中的概念、实体以及它们之间丰富的关联关系。", "relation": [{"head": "知识图谱", "head_type": "概念", "relation": "实现", "tail": "描述现实世界中的概念、实体以及它们之间丰富的关联关系", "tail_type": "概念"}]}
{"text": "领域知识图谱又称为行业知识图谱或垂直知识图谱，通常面向某一特定领域。","relation": [{"head": "领域知识图谱", "head_type": "概念", "relation": "等价", "tail": "行业知识图谱", "tail_type": "概念"}, {"head": "领域知识图谱", "head_type": "概念", "relation": "等价", "tail": "垂直知识图谱", "tail_type": "概念"}]}
{"text": "虽然如此，领域知识图谱与通用知识图谱的构建与应用也并非完全没有互通之处，如图9-1所示，其从无到有的构建过程可分为六个阶段，被称为领域知识图谱的生命周期[1]。", "relation": [{"head": "领域知识图谱的构建构成六个阶段", "head_type": "概念", "relation": "等价", "tail": "领域知识图谱的生命周期", "tail_type": "概念"}]}
{"text": "知识建模通常采用两种方式：一种是自顶向下（Top-Down）的方法，即首先为知识图谱定义数据模式，数据模式从最顶层概念构建，逐步向下细化，形成结构良好的分类学层次，然后再将实体添加到概念中。", "relation": [{"head": "知识建模方式", "head_type": "概念", "relation": "包含", "tail": "自顶向下的方法", "tail_type": "概念"}, {"head": "自顶向下", "head_type": "概念", "relation": "英文名", "tail": "Top-Down", "tail_type": "概念"}]}
{"text": "另一种则是自底向上（Bottom-Up）的方法，即首先对实体进行归纳组织，形成底层概念，然后逐步往上抽象，形成上层概念。", "relation": [{"head": "自底向上", "head_type": "概念", "relation": "英文名", "tail": "Bottom-Up", "tail_type": "概念"}]}
{"text": "9.1.2知识存储知识存储，顾名思义为针对构建完成的知识图谱设计底层存储方式，完成各类知识的存储，包括基本属性知识、关联知识、事件知识、时序知识、资源类知识等。", "relation": [{"head": "知识存储", "head_type": "概念", "relation": "定义", "tail": "为针对构建完成的知识图谱设计底层存储方式，完成各类知识的存储", "tail_type": "概念"}]}
{"text": "目前，主流的知识存储解决方案包括单一式存储和混合式存储两种。", "relation": [{"head": "知识存储", "head_type": "概念", "relation": "包含", "tail": "单一式存储", "tail_type": "概念"}, {"head": "主流的知识存储", "head_type": "概念", "relation": "包含", "tail": "混合式存储两种", "tail_type": "概念"}]}
{"text": "结构化数据中会存在一些复杂关系，针对这类关系的抽取是此类研究的重点，主要方法包括直接映射或者映射规则定义等；半结构化数据通常采用包装器的方式对网站进行解析，包装器是一个针对目标数据源中的数据制定了抽取规则的计算机程序。", "relation": [{"head": "抽取结构化数据中复杂关系", "head_type": "概念", "relation": "包括", "tail": "直接映射", "tail_type": "概念"}, {"head": "抽取结构化数据中复杂关系", "head_type": "概念", "relation": "包括", "tail": "映射规则定义", "tail_type": "概念"}]}
{"text": "包装器的定义、自动生成以及如何对包装器进行更新及维护以应对网站的变更，是当前获取需要考虑的问题；非结构化数据抽取难度最大，如何保证抽取的准确率和覆盖率是这类数据进行知识获取需要考虑的科学问题。", "relation": [{"head": "非结构化数据抽取", "head_type": "概念", "relation": "研究", "tail": "保证抽取的准确率和覆盖率", "tail_type": "概念"}]}
{"text": "9.1.4知识融合知识融合指将不同来源的知识进行对齐、合并的工作，形成全局统一的知识标识和关联。", "relation": [{"head": "知识融合", "head_type": "概念", "relation": "定义为", "tail": "将不同来源的知识进行对齐、合并的工作，形成全局统一的知识标识和关联", "tail_type": "概念"}]}
{"text": "知识融合是知识图谱构建中不可缺少的一环，知识融合体现了开放链接数据中互联的思想。", "relation": [{"head": "知识融合", "head_type": "概念", "relation": "属于", "tail": "知识图谱构建", "tail_type": "概念"}]}
{"text": "良好的融合方法能有效地避免信息孤岛，使得知识的连接更加稠密，提升知识应用价值，因此知识融合是构建知识图谱过程中的核心工作与重点研究方向。", "relation": [{"head": "构建知识图谱", "head_type": "概念", "relation": "研究", "tail": "知识融合", "tail_type": "概念"}]}
{"text": "知识图谱中的知识融合包含两个方面，即数据模式层的融合和数据层的融合。", "relation": [{"head": "知识融合", "head_type": "概念", "relation": "包含", "tail": "数据模式层的融合", "tail_type": "概念"}, {"head": "知识融合", "head_type": "概念", "relation": "包含", "tail": "数据层的融合", "tail_type": "概念"}]}
{"text": "数据模式层的融合包含概念合并、概念上下位关系合并以及概念的属性定义合并，通常依靠专家人工构建或从可靠的结构化数据中映射生成。", "relation": [{"head": "数据模式层的融合", "head_type": "概念", "relation": "依靠", "tail": "专家人工构建", "tail_type": "概念"}, {"head": "数据模式层的融合", "head_type": "概念", "relation": "依靠", "tail": "可靠的结构化数据中映射生成", "tail_type": "概念"}, {"head": "数据模式层的融合", "head_type": "概念", "relation": "包含", "tail": "概念合并", "tail_type": "概念"}, {"head": "数据模式层的融合", "head_type": "概念", "relation": "包含", "tail": "概念上下位关系合并", "tail_type": "概念"}, {"head": "数据模式层的融合", "head_type": "概念", "relation": "包含", "tail": "概念的属性定义合并", "tail_type": "概念"}]}
{"text": "数据层的融合包括实体合并、实体属性融合以及冲突检测与解决。", "relation": [{"head": "数据层的融合", "head_type": "概念", "relation": "包含", "tail": "实体合并", "tail_type": "概念"}, {"head": "数据层的融合", "head_type": "概念", "relation": "包含", "tail": "实体属性融合", "tail_type": "概念"}, {"head": "数据层的融合", "head_type": "概念", "relation": "包含", "tail": "冲突检测与解决", "tail_type": "概念"}]}
{"text": "进行知识融合时需要考虑使用什么方式实现不同来源、不同形态知识的融合；如何对海量知识进行高效融合[7]；如何对新增知识进行实时融合以及如何进行多语言融合等问题[8]。", "relation": [{"head": "知识融合", "head_type": "概念", "relation": "研究", "tail": "使用什么方式实现不同来源、不同形态知识的融合", "tail_type": "概念"}, {"head": "知识融合", "head_type": "概念", "relation": "研究", "tail": "如何对海量知识进行高效融合", "tail_type": "概念"}, {"head": "知识融合", "head_type": "概念", "relation": "研究", "tail": "如何对新增知识进行实时融合以及如何进行多语言融合", "tail_type": "概念"}]}
{"text": "9.1.5知识计算知识计算是领域知识图谱能力输出的主要方式，通过知识图谱本身能力为传统的应用形态赋能，提升服务质量和效率。", "relation": [{"head": "知识计算", "head_type": "概念", "relation": "属于", "tail": "领域知识图谱能力输出", "tail_type": "概念"}]}
{"text": "知识推理一般运用于知识发现、冲突与异常检测，是知识精细化工作和决策分析的主要实现方式。", "relation": [{"head": "知识推理", "head_type": "概念", "relation": "实现", "tail": "知识发现", "tail_type": "概念"}, {"head": "知识推理", "head_type": "概念", "relation": "实现", "tail": "异常检测", "tail_type": "概念"}, {"head": "知识推理", "head_type": "概念", "relation": "实现", "tail": "知识精细化工作", "tail_type": "概念"}, {"head": "知识推理", "head_type": "概念", "relation": "实现", "tail": "知识推理", "tail_type": "概念"}]}
{"text": "知识推理又可以分为基于本体的推理和基于规则的推理。", "relation": [{"head": "知识推理", "head_type": "概念", "relation": "包含", "tail": "基于本体的推理", "tail_type": "概念"}, {"head": "知识推理", "head_type": "概念", "relation": "包含", "tail": "基于规则的推理", "tail_type": "概念"}]}
{"text": "知识推理的关键问题包括：大数据量下的快速推理，记忆对于增量知识和规则的快速加载[9]。", "relation": [{"head": "知识推理的关键问题", "head_type": "概念", "relation": "包含", "tail": "大数据量下的快速推理", "tail_type": "概念"}, {"head": "知识推理的关键问题", "head_type": "概念", "relation": "包含", "tail": "记忆对于增量知识", "tail_type": "概念"}, {"head": "知识推理的关键问题", "head_type": "概念", "relation": "包含", "tail": "规则的快速加载", "tail_type": "概念"}]}
{"text": "知识图谱的挖掘计算与分析指基于图论的相关算法，实现对图谱的探索与挖掘。", "relation": [{"head": "知识图谱的挖掘计算与分析", "head_type": "概念", "relation": "被定义为", "tail": "基于图论的相关算法，实现对图谱的探索与挖掘", "tail_type": "概念"}]}
{"text": "知识图谱中的图算法一般包括图遍历、最短路径、权威节点分析、族群发现最大流算法、相似节点等，大规模图上的算法效率是图算法设计与实现的主要问题。", "relation": [{"head": "图算法", "head_type": "概念", "relation": "包括", "tail": "图遍历", "tail_type": "概念"}, {"head": "图算法", "head_type": "概念", "relation": "包括", "tail": "最短路径", "tail_type": "概念"}, {"head": "图算法", "head_type": "概念", "relation": "包括", "tail": "权威节点分析", "tail_type": "概念"}, {"head": "图算法", "head_type": "概念", "relation": "包括", "tail": "图族群发现最大流算法", "tail_type": "概念"}, {"head": "图算法", "head_type": "概念", "relation": "包括", "tail": "相似节点", "tail_type": "概念"}]}
{"text": "9.1.6知识应用知识应用是指将知识图谱特有的应用形态与领域数据和业务场景相结合，助力领域业务转型。", "relation": [{"head": "知识应用", "head_type": "概念", "relation": "被定义为", "tail": "将知识图谱特有的应用形态与领域数据和业务场景相结合，助力领域业务转型", "tail_type": "概念"}]}
{"text": "知识图谱的典型应用包括语义搜索、智能问答以及可视化决策支持。", "relation": [{"head": "知识图谱的应用", "head_type": "概念", "relation": "包含", "tail": "语义搜索", "tail_type": "概念"}, {"head": "知识图谱的应用", "head_type": "概念", "relation": "包含", "tail": "智能问答", "tail_type": "概念"}, {"head": "知识图谱的应用", "head_type": "概念", "relation": "包含", "tail": "可视化决策支持", "tail_type": "概念"}]}
{"text": "如何针对业务需求设计实现知识图谱应用，并基于数据特点进行优化调整，是知识图谱应用的关键研究内容。", "relation": [{"head": "知识图谱应用", "head_type": "概念", "relation": "研究", "tail": "针对业务需求设计实现知识图谱应用，并基于数据特点进行优化调整", "tail_type": "概念"}]}
{"text": "其中，语义搜索是指基于知识图谱中的知识，解决传统搜索中遇到的关键字语义多样性及语义消歧的难题，通过实体链接实现知识与文档的混合检索。", "relation": [{"head": "语义搜索", "head_type": "概念", "relation": "被定义为", "tail": "基于知识图谱中的知识，解决传统搜索中遇到的关键字语义多样性及语义消歧的难题，通过实体链接实现知识与文档的混合检索", "tail_type": "概念"}]}
{"text": "语义检索需要考虑如何解决自然语言输入带来的表达多样性问题，同时需要解决语言中实体的歧义性问题。", "relation": [{"head": "语义检索", "head_type": "概念", "relation": "研究", "tail": "解决自然语言输入带来的表达多样性问题", "tail_type": "概念"}, {"head": "语义检索", "head_type": "概念", "relation": "研究", "tail": "语言中实体的歧义性问题", "tail_type": "概念"}]}
{"text": "而智能问答是指针对用户输入的自然语言进行理解，从知识图谱或目标数据中给出用户问题的答案。", "relation": [{"head": "智能问答", "head_type": "概念", "relation": "被定义为", "tail": "针对用户输入的自然语言进行理解，从知识图谱或目标数据中给出用户问题的答案", "tail_type": "概念"}]}
{"text": "智能问答的关键技术及难点包括：1）准确的语义解析，如何正确理解用户的真实意图。", "relation": [{"head": "智能问答的关键技术及难点", "head_type": "概念", "relation": "包含", "tail": "准确的语义解析", "tail_type": "概念"}]}
{"text": "可视化决策支持则指通过提供统一的图形接口，结合可视化、推理、检索等，为用户提供信息获取的入口。", "relation": [{"head": "可视化决策支持", "head_type": "概念", "relation": "被定义为", "tail": "通过提供统一的图形接口，结合可视化、推理、检索等，为用户提供信息获取的入口", "tail_type": "概念"}]}
{"text": "对于可视化决策支持，需要考虑的关键问题包括：如何通过可视化方式辅助用户快速发现业务模式；如何提升可视化组件的交互友好程度，例如高效地缩放和导航；大规模图环境下底层算法的效率。", "relation": [{"head": "可视化决策支持", "head_type": "概念", "relation": "研究", "tail": "通过可视化方式辅助用户快速发现业务模式", "tail_type": "概念"}, {"head": "可视化决策支持", "head_type": "概念", "relation": "研究", "tail": "提升可视化组件的交互友好程度", "tail_type": "概念"}, {"head": "可视化决策支持", "head_type": "概念", "relation": "研究", "tail": "大规模图环境下底层算法的效率", "tail_type": "概念"}]}
{"text": "Protégé[2]是一套基于RDF（S）、OWL等语义网规范的开源本体编辑器，拥有图形化界面，适用于原型构建场景。", "relation": [{"head": "Protégé", "head_type": "产品", "relation": "属于", "tail": "开源本体编辑器", "tail_type": "概念"}]}
{"text": "PlantData[3]知识建模工具是一款商用知识图谱智能平台软件。", "relation": [{"head": "PlantData", "head_type": "产品", "relation": "属于", "tail": "知识图谱智能平台软件", "tail_type": "概念"}]}
{"text": "常用的开源D2R工具有D2RQ[5]、D2R_Server[6]、DB2triples[7]等。", "relation": [{"head": "开源D2R工具", "head_type": "概念", "relation": "包含", "tail": "D2RQ", "tail_type": "产品"}, {"head": "开源D2R工具", "head_type": "概念", "relation": "包含", "tail": "D2R_Server", "tail_type": "产品"}, {"head": "开源D2R工具", "head_type": "概念", "relation": "包含", "tail": "DB2triples", "tail_type": "产品"}]}
{"text": "按照抽取范围的不同，文本抽取可分为OpenIE和CloseIE两种。", "relation": [{"head": "文本抽取", "head_type": "概念", "relation": "包含", "tail": "OpenIE", "tail_type": "概念"}, {"head": "文本抽取", "head_type": "概念", "relation": "包含", "tail": "CloseIE", "tail_type": "概念"}]}
{"text": "实体对齐的目标是将从不同百科中学习到的、描述同一目标的实体或概念进行合并，再将合并后的实体集与开放链接数据集中抽取的实体进行合并。", "relation": [{"head": "实体对齐", "head_type": "概念", "relation": "被定义为", "tail": "将从不同百科中学习到的、描述同一目标的实体或概念进行合并，再将合并后的实体集与开放链接数据集中抽取的实体进行合并", "tail_type": "概念"}]}
{"text": "百科中描述了两种上下位关系，一种是类别之间的上下位关系，对应概念的层次关系；另一种则是类别与文章之间的上下位关系，对应实体与概念之间的从属关系。", "relation": [{"head": "上下位关系", "head_type": "概念", "relation": "包含", "tail": "类别之间的上下位关系", "tail_type": "概念"}, {"head": "上下位关系", "head_type": "概念", "relation": "包含", "tail": "类别与文章之间的上下位关系", "tail_type": "概念"}, {"head": "类别之间的上下位关系", "head_type": "概念", "relation": "等价", "tail": "概念的层次关系", "tail_type": "概念"}, {"head": "类别与文章之间的上下位关系", "head_type": "概念", "relation": "等价", "tail": "实体与概念之间的从属关系", "tail_type": "概念"}]}
{"text": "数据模式的学习又称为概念的属性学习，一个属性的定义包含三个部分：属性名、属性的定义域、属性的值域。", "relation": [{"head": "属性的定义", "head_type": "概念", "relation": "包含", "tail": "属性名", "tail_type": "概念"}, {"head": "属性的定义", "head_type": "概念", "relation": "包含", "tail": "属性的定义域", "tail_type": "概念"}, {"head": "属性的定义", "head_type": "概念", "relation": "包含", "tail": "属性的值域", "tail_type": "概念"}]}
{"text": "最后，对知识图谱实体描述，除了基础的属性与属性值，很多是通过实体标签来实现的。", "relation": [{"head": "知识图谱实体描述", "head_type": "概念", "relation": "依靠", "tail": "实体标签", "tail_type": "概念"}]}
{"text": "大规模聚类的目的是把统一数据源的信息先做一次融合。", "relation": [{"head": "大规模聚类", "head_type": "概念", "relation": "实现", "tail": "统一数据源的信息先做一次融合", "tail_type": "概念"}]}
{"text": "大规模实体链指的核心是通过知识图谱的候选实体排序，把新的实体与知识图谱目标识别进行关联，从而把新知识融入知识图谱。", "relation": [{"head": "大规模实体链指", "head_type": "概念", "relation": "实现", "tail": "把新知识融入知识图谱", "tail_type": "概念"}]}
{"text": "为了更好地支持在线图查询和逻辑查询，与在线业务相关的知识图谱子图采用在线图数据库来存储。", "relation": [{"head": "在线业务相关的知识图谱子图", "head_type": "概念", "relation": "依靠", "tail": "在线图数据库", "tail_type": "概念"}]}
{"text": "图情知识图谱的构建一般采用自顶向下的方式进行知识建模，通常从资源类型数据入手，整理出资源的发表者（人物）、发表机构（机构）、关键词（知识点）、发表载体（刊物）等类型的实体及各自之间的关系，同时通过人物、机构的主页进行实体属性的扩充。", "relation": [{"head": "图情知识图谱", "head_type": "概念", "relation": "研究", "tail": "实体及各自之间的关系", "tail_type": "概念"}]}
{"text": "对于实体融合，主要解决不同来源实体的属性缺失、冲突等问题，一般采用多数投票的方式进行实体属性的对齐。", "relation": [{"head": "实体融合", "head_type": "概念", "relation": "研究", "tail": "不同来源实体的属性缺失、冲突等问题", "tail_type": "概念"}, {"head": "实体融合", "head_type": "概念", "relation": "依靠", "tail": "多数投票的方式进行实体属性的对齐", "tail_type": "概念"}]}
{"text": "例如，通过图遍历算法进行机构合作的谱系分析；基于社区发现算法寻找学术研究热点；借助图排序算法进行权威分析等。", "relation": [{"head": "图遍历算法", "head_type": "概念", "relation": "实现", "tail": "机构合作的谱系分析", "tail_type": "概念"}, {"head": "基于社区发现算法", "head_type": "概念", "relation": "实现", "tail": "寻找学术研究热点", "tail_type": "概念"}, {"head": "图排序算法", "head_type": "概念", "relation": "实现", "tail": "权威分析", "tail_type": "概念"}]}
{"text": "通过知识推理完成新知识的补充，如专家合作关系、公司上下游关系等。", "relation": [{"head": "知识推理", "head_type": "概念", "relation": "实现", "tail": "新知识的补充", "tail_type": "概念"}]}
{"text": "图情知识图谱的典型应用包括知识搜索、知识标引、决策支持等。", "relation": [{"head": "图情知识图谱的应用", "head_type": "概念", "relation": "包含", "tail": "知识搜索", "tail_type": "概念"}, {"head": "图情知识图谱的应用", "head_type": "概念", "relation": "包含", "tail": "知识标引", "tail_type": "概念"}, {"head": "图情知识图谱的应用", "head_type": "概念", "relation": "包含", "tail": "决策支持", "tail_type": "概念"}]}
{"text": "图9-5大英博馆院语义搜索知识标引指的是根据构建完成的图情知识图谱，对新闻、文献等文本的内容进行知识标注的过程。", "relation": [{"head": "知识标引", "head_type": "概念", "relation": "定义为", "tail": "根据构建完成的图情知识图谱，对新闻、文献等文本的内容进行知识标注的过程", "tail_type": "概念"}]}
{"text": "知识标引既是图谱构建过程中的重要工作，又是图谱应用的一种形态，可以依托标引技术打造在线的阅读工具，或者集成Office、PDF_reader等文档类应用，提供知识卡片、知识推荐等服务，辅助终端用户阅读，如图9-6所示。", "relation": [{"head": "知识标引", "head_type": "概念", "relation": "属于", "tail": "谱构建过程中的重要工作", "tail_type": "概念"}, {"head": "知识标引", "head_type": "概念", "relation": "属于", "tail": "又是图谱应用的一种形态", "tail_type": "概念"}]}
{"text": "知识图谱可以组织现实世界中的知识，描述客观概念、实体、关系。", "relation": [{"head": "知识图谱", "head_type": "概念", "relation": "实现", "tail": "组织现实世界中的知识", "tail_type": "概念"}, {"head": "知识图谱", "head_type": "概念", "relation": "实现", "tail": "描述客观概念、实体、关系", "tail_type": "概念"}]}
{"text": "这种基于符号语义的计算模型，一方面可以促成人和机器的有效沟通，另一方面可以为深度学习模型提供先验知识，将机器学习结果转化为可复用的符号知识并累积起来。", "relation": [{"head": "基于符号语义的计算模型", "head_type": "概念", "relation": "实现", "tail": "促成人和机器的有效沟通", "tail_type": "概念"}, {"head": "基于符号语义的计算模型", "head_type": "概念", "relation": "实现", "tail": "为深度学习模型提供先验知识，将机器学习结果转化为可复用的符号知识并累积起来", "tail_type": "概念"}]}
{"text": "另一方面，则需要采用Language_Model（统计语言模型）、Topic_Model（主题生成模型）以及Deep_Learning_Model（深度学习模型）等各种模型，对商家标签、菜品标签、情感分析进行挖掘。", "relation": [{"head": "Language_Model", "head_type": "概念", "relation": "中文名", "tail": "统计语言模型", "tail_type": "概念"}, {"head": "Topic_Model", "head_type": "概念", "relation": "中文名", "tail": "主题生成模型", "tail_type": "概念"}, {"head": "Deep_Learning_Model", "head_type": "概念", "relation": "中文名", "tail": "深度学习模型", "tail_type": "概念"}]}
{"text": "构建创投知识图谱时，同样需要考虑数据融合的问题，典型问题包括：1）数值属性表示不一致，例如金额的阿拉伯数字与中文写法的区别；2）实体同义，例如企业的全称与简称；3）不同数据源中的数据冲突。", "relation": [{"head": "数据融合的问题", "head_type": "概念", "relation": "包含", "tail": "数值属性表示不一致", "tail_type": "概念"}, {"head": "数据融合的问题", "head_type": "概念", "relation": "包含", "tail": "实体同义", "tail_type": "概念"}, {"head": "数据融合的问题", "head_type": "概念", "relation": "包含", "tail": "不同数据源中的数据冲突", "tail_type": "概念"}]}
{"text": "对于创投知识图谱的知识计算，主要通过使用社区发现、基于图的排序、最短路径等图算法，对合作分析、时序、相似公司等应用进行能力输出。", "relation": [{"head": "创投知识图谱的知识计算", "head_type": "概念", "relation": "依靠", "tail": "社区发现", "tail_type": "概念"}, {"head": "创投知识图谱的知识计算", "head_type": "概念", "relation": "依靠", "tail": "基于图的排序", "tail_type": "概念"}, {"head": "创投知识图谱的知识计算", "head_type": "概念", "relation": "依靠", "tail": "最短路径等图算法", "tail_type": "概念"}, {"head": "创投知识图谱的知识计算", "head_type": "概念", "relation": "依靠", "tail": "对合作分析、时序、相似公司等应用进行能力输出", "tail_type": "概念"}]}
{"text": "创投领域知识图谱主要的应用形态包括知识检索以及可视化决策支持。", "relation": [{"head": "创投领域知识图谱", "head_type": "概念", "relation": "包含", "tail": "知识检索", "tail_type": "概念"}, {"head": "创投领域知识图谱", "head_type": "概念", "relation": "包含", "tail": "可视化决策支持", "tail_type": "概念"}]}
{"text": "通常来说，构造领域知识图谱会从大量特定类型的文本（尤其是高质量、模板化的专业资料）中提取实体关系。", "relation": [{"head": "构造领域知识图谱", "head_type": "概念", "relation": "依靠", "tail": "从大量特定类型的文本（尤其是高质量、模板化的专业资料）中提取实体关系", "tail_type": "概念"}]}
{"text": "对于非结构化文本，实体识别和关系抽取需要基于NLP算法，以及深度学习算法（例如，用词向量的方式寻找近义词，提高实体模糊识别的准确度），是一个反复迭代、不断精进的过程。", "relation": [{"head": "非结构化文本实体识别", "head_type": "概念", "relation": "依靠", "tail": "NLP算法，以及深度学习算法", "tail_type": "概念"}]}
{"text": "又如基于知识图谱的自然语言理解与自然语言生成，通过知识图谱对知识的建模能力，结合深度学习对知识的学习与抽象能力，实现以自然语言形式进行输入和输出的下一代问答系统。", "relation": [{"head": "基于知识图谱的自然语言理解与自然语言生成", "head_type": "概念", "relation": "实现", "tail": "以自然语言形式进行输入和输出的下一代问答系统", "tail_type": "概念"}]}
{"text": "知识图谱技术不单指某一项具体的技术，而是知识表示、抽取、存储、计算、应用等一系列技术的集合。", "relation": [{"head": "知识图谱技术", "head_type": "概念", "relation": "研究", "tail": "知识表示", "tail_type": "概念"}]}
