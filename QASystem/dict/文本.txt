一种用图模型来描述知识和建模世界万物之间的关联关系的技术方法
实体和概念
实体的属性和实体之间的关系
把基于文本链接的万维网转化成基于实体链接的语义网
Semantic_Web
Web_of_Data
Web_of_Things
在从数据中识别、发现和推断事物与概念之间的复杂关系
Justified_True_Belief
事实、概念、规则或原则的集合
现实世界的可计算模型
Frame-based_Languages
Production_Rules
描述客观世界的类别、个体、属性及关系等
描述类似于IF-THEN的逻辑结构，适合于刻画过程性知识。
概念、关系和实体的定义
建立术语之间的关系
50万条术语和700万条断言
基于形式化的知识表示方法刻画知识
名词、动词、形容词和副词之间的语义关系
非形式化、更加接近自然语言的描述
RDF三元组模型
不对顶层本体做非常严格的控制，用户可以创建与编辑类和关系的定义
RDF语义数据模型
采用互联网众包的方式生成和收集高质量的知识图谱数据
构建一个免费开放、多语言、任何人或机器都可以编辑修改的大规模链接知识库
超过5000万个知识条目
解决WordNet在非英语语种中数据缺乏的问题
将WordNet词典与Wikipedia集成
互联网挖掘的方法从Web中自动抽取三元组知识
面向特定领域的知识图谱
用计算机符号描述和表示人脑中的知识
Description_Framework
知识图谱的基本数据模型和逻辑结构
知识图谱的类集、属性集、关系集和词汇集
知识实际存在的物理格式
定义实体的命名原则及唯一标识规范等
Vocabulary
Entity
Relation
Event
Taxonomy
词与词之间的关系
利用大型的语义数据库自动获取关系类型标签
将实体和关系做联合抽取
实体和关系（包括属性）元组的融合
在评估过程中为新加入的知识赋予可信度值，据此进行知识的过滤和融合
判断知识库中的同名实体是否代表不同的含义
判断知识库中是否存在其他命名实体表示相同的含义
弥合词汇异构性和语义歧义的间隙
管理共识模式的演化和变化
对概念层进行推理，对实体级的关系进行补全
通过两个实体节点之间的路径，以及节点周围图的结构提取特征，并通过随机游走等算法降低特征抽取的复杂度，然后叠加线性的学习模型进行关系的预测
直接对事物进行搜索
将知识图谱中的每条三元组存储为一行具有三列的记录（主语，谓语，宾语）。
简单明了
将知识图谱查询翻译为SQL后会产生大量三元组表的自连接操作
每行记录存储知识图谱中一个主语的所有谓语和宾语
所需列数目过多，表中产生大量空值，无法存储多值宾语等
将同一类主语分配到一个表中
解决了三元组表的自连接问题和水平表的列数目过多问题
所需属性表过多，复杂查询的多表连接效率，空值问题和多值宾语问题
每种谓语建立一张两列的表（主语，宾语）
有效解决空值问题和多值宾语问题
大规模知识图谱的谓语表数目过多、复杂查询表连接过多、更新维护代价大等
将三元组全部6种排列对应地建立为6张表
缓解三元组表的自连接问题
需要更多的存储空间开销和索引更新维护代价
列名称不再和谓语绑定，将同一主语的所有谓语和宾语动态分配到某列
模块化的软件架构设计
为RDF优化设计的物理存储方案和查询处理方法
使用RDF图对应的标签图并建立“VS树”索引结构以加速查找
支持关系数据、对象-关系数据、RDF数据、XML数据和文本数据的统一管理
支持三元组数据库的基本功能、动态物化的RDFS++推理机、OWL2_RL推理机、Prolog规则推理系统、时空推理机制、社会网络分析库、可视化RDF图浏览器等
良好支持RDF推理功能
支持真正意义上的集群分布式存储和查询处理
不支持真正意义上的分布式查询处理
Single-hop_Questions
Multi-hop_Questions
规模更小、精度更高，知识问答的质量高
提高人们检索信息的精度和效率，还能提升用户的产品体验
将自然语言问句解析成结构化查询语句，进而在知识库上执行查询得到答案
学习了标注数据中蕴涵的语法解析规律，使得模型能具有更好的可解释性
需要花费大量的人力和财力
通过粗粒度信息检索，在知识库中直接筛选出候选答案，根据问句中抽取出的特征，对候选答案进行排序
基于已知的事实或知识推断得出未知的事实或知识的过程。
Deductive_Reasoning
Inductive_Reasoning
Abductive_Reasoning
Analogical_Reasoning
补全知识图谱，校验知识图谱质量
根据知识图谱中已有的知识推理出新的知识或识别出错误的知识
基于定义或学习知识中存在的规则进行推理
每条规则的真值都为1
每条规则的真值为区间在0到1之间的概率
推理结论可解释，对人比较友好
将知识图谱映射到连续的向量空间中，并为知识图谱中的元素学习分布式表示为低维稠密的向量或矩阵
各元素的分布式表示之间的计算完成隐式的推理
通过神经网络的设计模拟知识图谱推理
设计多样能够满足不同的推理需求
融合了关系的表示学习、规则学习以及循环神经网络
强化学习方法学习知识图谱多步推理过程
将已有的推理规则输入知识图谱表示学习过程中，约束和影响表示学习结果并取得更好的推理效果
结合规则推理、表示学习推理以及神经网络推理的能力并实现优势互补，能够同时提升推理结果的精确性和可解释性
自动规则挖掘系统，基于规则的推理系统
一方面提高表示学习结果对知识图谱中含有的语义信息的捕捉能力，目前的研究多集中在链接预测任务上，其他推理任务有待跟进研究；另一方面是利用分布式表示作为桥梁，将知识图谱与文本、图像等异质信息结合，实现信息互补以及更多样化的综合推理
设计更加有效和有意义的神经网络结构，来实现更加高效且精确的推理，通过对神经网络中间结果的解析实现对推理结果的部分解释
创建专家系统以协助解决与其编程领域相关问题的技术
建立、维护和使用基于知识的系统所涉及的所有技术、科学和社会方面
Knowledge_Graph_Representation
一种用互联的节点和弧表示知识的一个结构
事件
Description_Logic
给边赋予语义
客观事物的机器标示
A_KR_is_a_Surrogate
一组本体约定和概念模型
A_KR_is_a_Set_of_Ontological_Commitments
支持推理的表示基础
A_KR_is_a_Theory_of_Intelligent_Reasoning
用于高效计算的数据结构
A_KR_is_a_medium_for_Efficient_Computation
人可理解的机器语言
A_KR_is_a_Medium_of_Human_Expression
InferenceEngine
第一个描述逻辑语言
刻画知识表达要素
Concepts
Roles
Individual
Relationships
Axioms
语义网的基础数据模型
易于刻画显式、离散的知识
易于刻画显式、离散的知识，因而具有内生的可解释性
公理系统的标准形式逻辑
First_Order_Logic
结构性
紧密性
可实现性
有限的可用性。
Horn_Clause
带有最多一个肯定文字的子句，没有否定符号的文字
严密性
易实现性
有限的表达能力
无法表示不确定性知识
表达人类的语义知识
支持推理人类的语义知识
情况
状态
表示各种语义联系、动作
（节点1，联想弧，节点2）
联想性、易用性、结构性
无形式化语法
更好地理解视觉推理和自然语言处理
人们对现实世界中各种事物的认识都以一种类似于框架的结构存储在记忆中
知识表示的基本单位
表示描述对象的一个属性
表示槽属性的一个方面
结构性，能把事物的属性以及事物间的各种语义联想显式地表示出来
框架对于知识的描述比较全面，支持默认值以及触发器
构建成本非常高
对知识库的质量要求非常高
默认值会增大推理的复杂度
很强的表达能力
很强的可判定性
W3C互联网本体语言（OWL）的理论基础
有限的表达能力，无法表示不确定性知识
结构性、严密性，多样性，易实现性，把事物的属性显式地表示出来
W3C一系列语义网标准的核心
为RDF提供语法基础
连接两个个体，或者连接一个个体和一个数据类型的实例
Literals
数据值；编码为字符串；数据类型的实例；纯文字；
开放世界假设
用类以及属性描述个体之间的关系
用于指定个体的类
指定类的父类
指定属性的父属性
指定属性的定义域
指定属性的值域
缺少对于局部值域的属性定义
缺少类、属性、个体的等价性
缺少不相交类的定义
缺少基数约束
缺少关于属性特性的描述
得到一个表达能力更强的本体语言
声明两个类、属性和实例是等价的
声明一个属性是传递关系
声明两个属性有互逆的关系
声明一个属性是函数
声明一个属性是对称的
声明一个属性是全称限定
声明一个属性是存在限定
声明一个属性的基数
声明一个类是等价于两个类相交
专为基于本体的查询设计的
专为概念术语描述、本体的分类推理而设计
扩展了RDFS的表达能力，在RDFS的基础上引入属性的特殊特性，允许声明等价性，允许属性的局部约束
●rdfs:subClassOf；●rdfs:subPropertyOf；●rdfs:domain；●rdfs:range；●owl:TransitiveProperty；●owl:FunctionalProperty；●owl:sameAs；●owl:equivalentClass；●owl:equivalentProperty；●owl:someValuesFrom；●owl:allValuesFrom。
提供了查询RDF数据的标准语法、处理SPARQL查询的规则以及结果返回形式
可选算子，指的是在这个算子覆盖范围的查询语句是可选的。
过滤算子，指的是这个算子覆盖范围的查询语句可以用来过滤查询结果。
将两个查询的结果合并起来
一种基于JSON表示和传输链接数据的方法。
描述了如何通过JSON表示有向图，以及如何在一个文档中混合表示链接数据及非链接数据
围绕某类知识提供共享的术语
扩充了XHTML的几个属性，网页制作者可以利用这些属性在网页中添加可供机器读取的资源
将RDF的三元组嵌入在XHTML文档中；从RDFa文件中提取出RDF三元组
在网页标记语言中嵌入机器可读的属性数据
可以有一个或多个Type
描述Facts
以页面“Page”为基本的组织单元
代指最顶层的对象
代指实例对象
一个Property、一个或多个Values、一个或多个Qualifiers、一个或多个References、一个标识重要性程度的Rank
处理复杂的多元表示
标识每个陈述的来源或出处
描述了Concepts之间的关系
将一个词表示成一个很长的向量，该向量的维度是整个词表的大小；对于某一个具体的词，在其独热表示的向量中，除了表示该词编号的维度为1，其余都为0。
将文本想象成一个装词的袋子，不考虑词之间的上下文关系，不关心词在袋子中存放的顺序，仅记录每个词在该文本（词袋）中出现的次数
先收集所有文本的可见词汇并组成一个词典，再对所有词进行编号，对于每个文本，可以使用一个表示每个词出现次数的向量来表示，该向量的每一个维度的数字表示该维度所指代的词在该文本中出现的次数
更多地表示词与词之间的语义相似程度，提出词的分布式表示，也就是基于上下文的稠密向量表示法
Count-based
简单说就是记录文本中词的出现次数。
Predictive
既可以通过上下文预测中心词，也可以通过中心词预测上下文
Task-based
通过任务驱动的方法；通过对词向量在具体任务上的表现效果对词向量进行学习。
用上下文预测中心词，从而训练出的词向量包含了一定的上下文信息
将知识图谱中包括实体和关系的内容映射到连续向量空间方法
Knowledge_Graph_Embedding
Representation_Learning
基于监督学习
如果一个三元组（h,r,t）成立，那么它们需要符合h+r≈t关系
提高计算的效率，增加下游应用的多样性，并可以作为预训练，为下游模型提供语义支持
衡量向量化后的知识图谱中三元组的合理性问题，转化成衡量头实体和尾实体的距离问题
挖掘向量化后的实体和关系的潜在语义
将整个知识图谱编码为一个三维张量，由这个张量分解出一个核心张量和一个因子矩阵，核心张量中每个二维矩阵切片代表一种关系，因子矩阵中每一行代表一个实体。由核心张量和因子矩阵还原的结果被看作对应三元组成立的概率，如果概率大于某个阈值，则对应三元组正确；否则不正确。
考虑到复数的乘法不满足交换律，所以在该模型中实体和关系的向量表示不再依赖实数而是放在了复数域，从而其得分函数不具有对称性。也就是说，对于非对称的关系，将三元组中的头实体和尾实体调换位置后可以得到不同的分数。
考虑额外的附加信息进行提升
可以连接两个实体的关系链
实体之间的多跳关系
对实体有一些简要的文本描述
Logical_Rules
讨论的重点主要是霍恩子句
Link_Prediction
通过一个已知的实体和关系预测另一个实体，或者通过两个实体预测关系
将知识图谱中的每个实体都放在对应的位置上，并且放入相应的知识图谱嵌入模型的得分函数中，计算该三元组的合理性，得分最高的实体会被作为链接预测的结果。
Mean_Rank
Mean_Reciprocal_Rank
Hist@n
Triple_Classification
给定一个完整的三元组，判断三元组的真假
只需要把三元组各个部分的向量表达带入相应的知识图谱嵌入的得分函数，三元组的得分越高，其合理性和真实性越高
验证两个实体是否指代或者引用的是同一个事物或对象
Entity_Resolution
设计一些实体之间的相似度函数来判断两个实体的相似程度，再进行对齐。
是对某一个具体的通过自然语言表达的问题，使用知识图谱中的三元组对其进行回答
设计一种得分函数，使问题的向量表示和其正确答案的向量表示得分较高得分函数
对用户推荐其没有接触过的、但有可能会感兴趣或者购买的服务或产品，包括电影、书籍、音乐、商品等。
协同过滤算法对用户和物品项目之间的交互进行建模并作为潜在表示取得了很好的效果
二元组G=（V,E）
W3C制定的在语义万维网上表示和交换机器可理解信息的标准数据模型
每个三元组代表一个陈述句，其中s是主语，p是谓语，o是宾语；(s,p,o)表示资源s与资源o之间具有联系p，或表示资源s具有属性p且其取值为p
W3C制定的RDF图数据的标准查询语言
便于用户学习掌握同时给予数据库进行查询优化的空间
不能满足高级用户导航式查询的要求，数据库规划的查询执行计划有可能并不是最优方案
对Cypher进行标准化工作，为其他实现者提供语法和语义的参考标准
在关系数据 库中建立一张具有3列的表，该表的模式为： 三元组表 (主语， 谓语， 宾语)
当三元组表规模较大时，多个自连接操作会使SQL查询性能低下
每行记录存储一个知识图谱中一个主语的所有谓语和宾语
查询大为简化，仅需单表查询即可完成该任务，不用进行连接操作
对水平表的细化，将同类主语分到一个表中，不同类主语分到不同表中
克服了三元组表的自连接问题，又解决了水平表中列数目过多的问题
Vertical_Partitioning
为每种谓语建立一张表，表中存放知识图谱中由该谓语连接的主语和宾语值
解决了空值问题；解决了多值问题；能够使用归并排序连接快速执行不同谓语表的连接查询操作
维护大规模的表需要很大的开销；越是复杂的知识图谱查询操作，需要执行的表连接操作数量越多；谓语表的数量越多，数据更新维护代价越大，对于一个主语的更新将涉及多张表，产生很高的更新时I/O开销
将三元组全部6种排列对应地建立为6张表，即 spo (主语， 谓语， 宾语)、pos (谓语， 宾语， 主语)、osp (宾语， 主语， 谓语)、sop (主语， 宾语， 谓语)、pso (谓语，主语， 宾语)和ops (宾语， 谓语， 主语)。
缓解三元组表的单表自连接问题以及加速某些典型知识图谱查询的效率
将表的列作为谓语和宾语的存储位置，而不将列与谓语进行绑定
一行存储一个主语（主语列）及其全部谓语（predi列）和宾语（vali列）
当dph表中遇到一个多值谓语时，则在相应的宾语处生成一个唯一的id值；将该id值和每个对应的宾语存储为ds表的一行
专门为存储大规模RDF数据而开发的知识图谱数据库
定义了URI、空节点（Blank_Node）、字面值（Literal）和语句（Statement）等RDF基本元素
各种RDF文件格式的解析器（Parser）和编写器（Writer），解析器负责将RDF文件解析为RDF模型中的三元组语句，编写器负责将三元组语句写为RDF文件
提供RDF的存储、查询和推理等服务，面向终端用户，简单易用
直接调用存储库API
通过HTTP访问存储库API的Web服务
为RDF数据精心打造的压缩物理存储方案、查询处理和查询优化技术
将RDF图G中的每个实体节点及其邻居属性和属性值编码成一个二进制位串，由这些位串作为节点组成一张与RDF图G对应的标签图G*
存储层对于图数据的存取效率天生就优于关系数据库；具备OLTP数据库必需的ACID事务处理功能
对于数据模式的支持也相对灵活，可以管理无模式数据（Schema-less），也可以像关系数据库那样定义完整的模式（Schema-full），还可以适应介于两者之间的混合模式（Schema-mixed）数据
具有“无索引邻接”特性（Index-FreeAdjacency）的图数据库
每个节点维护着指向其邻接节点的直接引用，这相当于每个节点都可看作是其邻接节点的一个“局部索引”，用其查找邻接节点比使用“全局索引”更能节省时间。
图数据中的点边结构信息建立索引的方法
将图中长度小于或等于一个固定长度的全部路径构建为索引结构
将图数据中的某些子图结构信息作为关键字，将该子图的实例数据作为值而构建的索引结构
链接数据、数据库
网页中的表格、列表
纯文本数据
自动化地从文本中发现和抽取相关信息，并将多个文本碎片中的信息进行合并，将非结构化数据转换为结构化数据，包括某一特定领域的模式、实体关系或RDF三元组。
从文本中检测出命名实体，并将其分类到预定义的类别中，例如人物、组织、地点、时间等
从文本中识别抽取实体及实体之间的关系
识别文本中关于事件的信息，并以结构化的形式呈现。
Message_Understanding_Conference,MUC
鼓励和开发更好的信息抽取方法
Automatic_Content_Extraction,ACE
Knowledge_Base_Population,KBP
开发和评估从非结构化文本中获取知识填充知识库的技术
Semantic_Evaluation,SemEval
增进人们对词义与多义现象的理解
是从文本中抽取实体信息元素，包括人名、组织机构名、地理位置、时间、日期、字符值和金额值等。
采用人工编写规则的方式，首先构建大量的实体抽取规则，一般由具有一定领域知识的专家手工构建，将规则与文本字符串进行匹配，识别命名实体。
利用完全标注或部分标注的语料进行模型训练
Inside–Outside–Beginning
词被标记为实体名称的起始词（B）、实体名称的后续词（I）或实体名称的外部词（D）
词被标记为实体名称内部词（I）或实体名称外部词（D）
计算每个词的一组特征作为模型的输入
是否首字母大写、是否以句点结尾、是否包含数字、词性、词的n-gram
外部词典定义
整个语料文档集计算
一种有向图概率模型，模型中包含了隐藏的状态序列和可观察的观测序列
给定一组输入随机变量条件下另一组输出随机变量的条件概率分布模型
直接以文本中词的向量为输入，通过神经网络实现端到端的命名实体识别
Convolutional_NeuralNetwork
Recurrent_Neural_Network
使用了长短时记忆神经网络（Long_Shot-Term_Memory_Neural_Network,LSTM）与CRF相结合进行命名实体识别
与LSTM-CRF模型十分相似，但Embedding层中加入了每个词的字符级向量表示
注意力机制可以帮助扩展基本的编码器-解码器模型结构，让模型能够获取输入序列中与下一个目标词相关的信息
从文本中抽取出两个或者多个实体之间的语义关系
基于语言学知识，结合语料的特点，由领域专家手工编写模板，从文本中匹配具有特定关系的实体
模板构建简单，可以比较快地在小规模数据集上实现关系抽取系统
当数据规模较大时，手工构建模板需要耗费领域专家大量的时间；可移植性较差，当面临另一个领域的关系抽取问题时，需要重新构建模板；召回率普遍不高
将关系抽取转化为分类问题，在大量标注数据的基础上，训练有监督学习模型进行关系抽取
基于实体和词的特征
基于句子中语块序列的特征
实体间的依存关系路径、实体间依存树结构的距离以及其他特定的结构信息
实体抽取和关系抽取两个过程是分离的
将实体抽取和关系抽取相结合
只利用少量的标注数据进行模型学习
通过将知识图谱与非结构化文本对齐的方式自动构建大量的训练数据，减少模型对人工标注数据的依赖，增强模型的跨领域适应能力。
从知识图谱中抽取存在目标关系的实体对；从非结构化文本中抽取含有实体对的句子作为训练样例；训练监督学习模型进行关系抽取。
利用丰富的知识图谱信息获取训练数据
大量噪声会被引入到训练数据中，从而引发语义漂移的现象
利用少量的实例作为初始种子集合，然后在种子集合上学习获得关系抽取的模板，再利用模板抽取更多的实例，加入种子集合中。
自动评价新实例的可信度，并保留最可靠的实例加入种子集合
从Web文本中抽取非特定领域的事实信息
以初始本体和少量种子作为输入，从大规模的Web文本中学习，并对学习到的内容进行打分来提升系统性能
关系抽取系统构建成本低，适合大规模的关系抽取任务，并且具备发现新关系的能力
对初始种子较为敏感、存在语义漂移问题、结果准确率较低
发生的事情，通常具有时间、地点、参与者等属性。
从自然语言文本中抽取出用户感兴趣的事件信息，并以结构化的形式呈现出来，例如事件发生的时间、地点、发生原因、参与者等。
将事件抽取任务分解为一系列基于分类的子任务，包括事件识别、元素抽取、属性分类和可报告性判别；每一个子任务由一个机器学习分类器负责实施。
判断词汇是否为事件触发词，并基于触发词信息对事件类别进行分类
判断词组是否为事件的元素
判定事件元素的角色类别
判定事件的属性。
判定是否存在值得报告的事件实例
事件的所有相关信息会通过一个模型同时抽取出来
首先建立事件抽取子任务的模型，然后将各个模型的目标函数进行组合，形成联合推断的目标函数；通过对联合目标函数进行优化，获得事件抽取各个子任务的结果。
充分分析子任务间的关系后，基于概率图模型进行联合建模，获得事件抽取的总体结果
从数据库这种结构化数据中抽取知识
定义了一个从关系数据库到RDF图数据的简单转换，为定义和比较更复杂的转换提供了基础。
将关系数据库表结构和数据直接转换为RDF图，关系数据库的数据结构直接反映在RDF图中。
●数据库中的表映射为RDF类；●数据库中表的列映射为RDF属性；●数据库表中每一行映射为一个资源或实体，创建IRI；●数据库表中每个单元格的值映射为一个文字值（Literal_Value）；如果单元格的值对应一个外键，则将其替换为外键值指向的资源或实体的IRI。
一种用于表示从关系数据库到RDF数据集的自定义映射的语言。
在RDF数据模型下查看现有关系型数据的能力，并且可以基于用户自定义的结构和目标词汇表示原有的关系型数据。
通过逻辑表从数据库中检索数据，每个逻辑表通过三元组映射映射至RDF数据
以访问知识图谱的形式直接访问关系数据库，可以直接使用语句查询数据库中的信息
OBDA
可以将关系数据库以RDF形式发布
提供对RDF数据的查询访问接口，供上层的RDF浏览器、SPARQL查询客户端以及HTML浏览器调用
使用了一种可定制的D2RQ映射文件将关系数据库内容映射为RDF格式
Web端的请求被重写为SQL查询，这种即时转换允许从大型实时数据库发布RDF，而无须将数据复制到专用的RDF三元组存储中。
使用属于DL-Lite轻量级描述逻辑系列的语言定义，通过数据库和本体元素之间的映射，用户可以通过SPARQL查询数据库
建立数据库到RDF和OWL的映射
在数据库上执行SPARQL查询
执行SPARQL查询时可以获得与SQL语句查询相同的速度，它支持R2RML和D2RQ映射，并为用户提供图形界面个性化定制映射
数据升级，从关系数据库中的数据生成RDF实例；查询转换，从SPARQL到SQL
该形式的数据不符合关系数据库或其他形式的数据表形式结构，但又包含标签或其他标记来分离语义元素并保持记录和数据字段的层次结构
词条标题、词条摘要、跨语言链接、分类、信息框
描述了458万个实体，其中有422万个实体被准确地在一个本体中进行分类，其中包括144.5万个人物、73.5万个地点、41.1万件作品、24.1万个组织、25.1万个物种和6000种疾病
包含本地及远程的维基百科文章数据
存储或序列化提取的RDF三元组；
确定数据类型，在不同单元之间转换值并将标记分解成列表
将页面集合、提取器和目标数据分组到一个工作流程中
将维基百科文章传递给提取器并将其输出传递到目标数据的过程
抽取维基百科词条的标题，并将其定义为实体的标签 
抽取维基百科词条页面的第一段文字，将其定义为实体的短摘要 
抽取词条页面指向其他语言版本的跨语言链接 
取指向图片的链接
抽取维基百科词条的重定向链接，建立其与同义词条的关联
从维基百科消歧页面抽取有歧义的词条链接 
抽取词条正文指向维基百科外部的链接 
抽取词条正文指向维基百科内部的链接 
抽取诸如公司、机构等实体的主页链接 
抽取词条所属的分类 
抽取词条所属的分类 
从词条页面的信息框中抽取实体的结构化信息 
直接将信息框中的信息转换为RDF三元组；三元组的主语由DBpedia的URI前缀和词条名称相连组成，谓语由信息框属性URI前缀和属性名相连组成，宾语则基于属性值创建，可以是实体的URI或者数据类型的值。
抽取出的三元组存在数据不一致的问题
首先将信息框的模板、属性映射到人工定义的本体中的类型和属性，然后采用本体中的词汇􏰂述抽取出的结构化信息 
通过包装器实现获取结构化信息
能够将数据从HTML网页中抽取出来，并将它们还原为结构化数据的软件程序
是通过人工分析构建包装器信息抽取的规则
基于有监督学习方法从已标注的训练样例集合中学习信息抽取的规则，然后对相同模板的其他网页进行数据抽取的方法
纠正和清理网页不规范的HTML、XML标记
在网页上标注需要抽取的数据，标注过程一般是给网页中的某个位置打上特殊的标签，表明此处是需要抽取的数据。
基于标注的数据生成XPath集合空间，对生成的集合进行归纳，从而形成若干个子集。
通过准确率和召回率进行评估
需要大量的人工标注工作，因而不适用对大量站点进行数据的抽取；包装器维护的工作量也很大，一旦网站改版，需要重新标注数据，归纳新的包装器。
相似的网页首先通过聚类被分成若干组，通过挖掘同一组中相似网页的重复模式，可以生成适用于该组网页的包装器；在应用包装器进行数据抽取时，首先将需要抽取的页面划分到先前生成的网页组，然后应用该组对应的包装器进行数据抽取。
从已有的实体及实体关系出发挖掘新的知识
将文本中的实体指称链向其在给定知识库中目标实体的过程
将文本数据转化为有实体标注的形式，建立文本与知识库的联系，可以为进一步文本分析和处理提供基础
识别出文本中的实体指称
首先构建问题领域的实体指称词典，通过直接与文本的匹配识别指称
确定文本中的实体指称可能指向的实体集合。
从实体提及出现的相关文档中识别其他可能的扩展变体
启发式的模式匹配方法
将实体提及和上下文文字提交至搜索引擎，可以根据搜索引擎返回的检索结果生成候选实体。
基于维基百科数据构建查询实体引用表，建立实体提及与候选实体的对应关系
基于维基百科中的词条页面、重定向页面、消歧页面、词条正文超链接等抽取实体提及与实体的对应关系
在确定文本中的实体指称和它们的候选实体后，实体链接系统需要为每一个实体指称确定其指向的实体
将实体指称、实体以及它们之间的关系通过图的形式表示出来，然后在图上对实体指称之间、候选实体之间、实体指称与候选实体之间的关联关系进行协同推理。
对实体提及和实体的联合概率进行建模，可以通过模型的推理求解实体消歧问题。
在同一个文本中出现的实体应该与文本表述的主题相关。因此可以对实体在文本中的相容度、实体与话题的一致性进行联合建模，从而提升实体链接的结果
使用基于深度神经网络的实体语义相关度计算模型
以一阶逻辑归纳为理论基础，并以一阶逻辑为表达语言的符号规则学习算法
Inductive Logic Programming,ILP
从知识图谱中学习一阶逻辑规则；给定背景知识和目标谓词（知识图谱中即为关系）,ILP系统可以学习获得描述目标谓词的逻辑规则集合。
采用顺序覆盖的策略逐条学习逻辑规则，在学习每条规则时，FOIL采用了基于信息熵的评价函数引导搜索过程，归纳学习一阶规则
仅适用于小规模的数据集，在较大规模的数据集上运行效率不高
Path_Ranking_Algorithm,PRA
一种将关系路径作为特征的知识图谱链接预测算法
通过发现连接两个实体的一组关系路径来预测实体间可能存在的某种特定关系
基于随机游走的特征选择方法
通过计算实体对在每个特征关系路径上的可达概率，就可以得到该实体对所有特征的值。
基于训练样例（目标关系的正例实体对和反例实体对）和它们的特征，为每个目标关系训练一个分类模型。利用训练完的模型，可以预测知识图谱中任意两个实体间是否存在某特定关系。
描述特定领域中的抽象概念、属性、公理
描述具体的实体对象、实体间的关系，包含大量的事实和数据
本体描述的内容在语义上往往重叠或关联，但使用的本体在表示语言和表示模型上却具有差异
建立异构本体或异构实例之间的联系，从而使异构的知识图谱能相互沟通，实现它们之间的互操作
不同的语法
将不同的语言转化为同样的语法格式
不同语言的逻辑表示，不同的语言可能采用不同的形式来表示逻辑意义上的等价结果
定义从语言L1逻辑表示到语言L2的逻辑表示的转换规则
语言原语的语义
不同本体语言表达能力上的差异
将表达能力弱的语言向表达能力强的语言转换
对同样的建模领域进行抽象的方式不同
对概念化说明的方式不同
同样名称的概念在不同的领域内表示的含义往往有差异；同时，不同的建模者出于对领域需求或主观认识上的不同，在建模过程中对概念的划分往往也有差异
描述的领域在覆盖的知识范围上有差异，而且对于所覆盖的范围，它们之间描述的详细程度也有差异
本体模型描述的领域范围，哪些领域内的事物是包含在本体内的，哪些领域内的事物不是当前本体所关心的。
本体对所建模的领域进行描述的详细程度
从什么认识角度来描述领域内的知识
不同的范例可用来表示相同的概念，这也就出现了不匹配。
对同一个概念的建模可以选择
不同本体中含义上相同的概念常常由于建模者的习惯而被使用不同的名字表示
不同编码格式造成的匹配
将多个本体合并为一个大本体
寻找本体间的映射规则
直接将多个异构本体集成为一个统一的本体，该本体提供统一的语义规范和共享词汇
缺乏灵活性
首先抽取异构本体之间的共同知识，根据它建立一个全局本体，同时，各个系统可以拥有自己的本体
避免局部本体存在过多的冗余，本体规模不会过于庞大，同时也达到了解决本体间异构的目的
工作耗时费力，而且缺乏自动方法支持；随着多本体的变化，集成过程需要不断地重复进行，代价过高；不具有通用性， 缺乏灵活性
建立异构本体间映射的基础
明确映射应该建立在异构本体的哪些成分之间。
明确应该建立具有何种功能的本体映射。
建立不同本体的成分之间的等价关系
指出表示名称相同的本体成分实际上含义是不同的
概念之间和属性之间的继承关系
概念之间的相似性
概念之间的对立
关系之间的互逆
来自不同概念间的个体具有整体—部分关系
通过这个角度的分类，明确什么形式的映射是简单的，什么形式的映射是复杂的。
基本的、必要的、组成简单的和发现过程相对容易的映射
不直观的、组成复杂并且发现过程相对困难的映射
保证本体中需要进行映射的成分能够被方便获取
寻找异构本体间的联系，然后根据这些联系建立异构本体间的映射规则。
借助工具将发现的映射合理表示和组织
借助自然语言处理技术，比较映射对象之间的相似度，以发现异构本体间的联系
分析异构本体之间结构上的相似，寻找可能的映射规则
借助本体中的实例，利用机器学习等技术寻找本体间的映
在一个映射发现系统中同时采用多种寻找本体映射的方法
直接比较表示本体成分的术语的字符串结构
提高后续比较的结果
在规范字符串的基础上，能进一步度量不同字符串间的相似程度。
依靠自然语言处理技术寻找概念或关系之间的联系
利用词语形态和语法分析来保证术语的规范化
利用词典等外部资源来寻找映射
在寻找映射的过程中，同时考虑本体的结构能弥补只进行术语比较的不足，提高映射结果的精度。
利用诸如属性或关系的定义域、它们的基数、传递性或对称性来计算本体成分之间的相似度。
比较两本体的成分之间的相似
帮助用户进行本体集成操作，能够提供什 么成分能被合并的建议，能识别集成操作中造成的不一致问题和其他潜在的错误，并建议可能的策略来解决这些问题
找本体间相似映射
比较本体的两个版本，识别它们之间结构上的不同 
从现有本体创建一个新本体，并能保证结果子本体是良构的
在术语比较的基础上利用本体结构进一步判断和发现可能相似的本体成分。
遍历异构本体中由“锚”限定的对应路径，沿着这些路径进行比较，以寻找两个本体间更多的语义相关术语 
基于结构的本体映射发现技术中的一项典型工作，它以基于术语技术得到的本体映射结果为基础，进一步分析本体图的结构相似性，从而发现更多的本体映射。
只能发现异构本体原子概念间的等价映射，以及少量原子关系间的等价映射；对于复杂概念或复杂关系间的本体映射，AnchorPROMPT是无法处理的；从技术上说，AnchorPROMPT算法是基于一种直观的经验，缺乏严格的理论依据
从语言角度判断本体间概念或关系的相似；然后以这些初始的术语相似为基础，执行合并算法完成本体合并的任务；在合并本体时要与用户进行交互
利用术语相关性计算方法寻找本体间概念或概念的相关属性的映射
只能发现有限的概念间或属性间的等价映射
处理语义Web上分布式本体间映射的一个框架
处理、表示并应用异构本体间的映射
给出一套本体映射方法学，用来表示映射，将映射划分为概念桥和属性桥两类，并利用映射实现异构本体间的数据转换
缺乏自己特有的映射发现技术
采用半自动算法生成本体互操作的映射规则，解决本体之间的异构
寻找的映射是原子概念之间的等价关系，属于本体间的简单映射
它输入两个本体的图结构，返回图节点之间的语义关系；其中可能的语义关系有等价（=）、泛化（）、特化（）、不匹配（⊥）和相交（）。
综合使用了语言和结构的匹配技术，并在预定义词典的帮助下，计算相似度获得映射结果
将匹配的术语对作为候选的合并对象，术语对匹配考虑术语名、术语定义、可能的缩写与展开形式以及后缀等因素。
能识别术语间是否包含或不相关等简单的映射关系。
建立局部本体和基本词汇集之间的映射，通过这种映射来达到异构信息源查询。
靠识别不同本体间相关元素对的算法、来发现映射，这些元素对可以是概念对，也可以是关系对
通过比较概念的外延，即本体的实例，发现异构本体之间的语义关联
本体概念间存在共享实例
概念之间没有共享实例
应用机器学习技术，用半自动的方法发现异构本体间的映射；利用放松标记技术，利用启发式知识和特定领域约束来进一步提高匹配的正确率。
正确率并不是很高，即使应用相关的领域约束，对各种情况的映射仍然难以得到高精度的映射结果；对不同本体之间的映射，都需要进行学习训练，使用起来很麻烦；学习器的类型有限，难以处理本体中各种类型的信息；无法处理关于异构本体的关系之间的映射
发现异构本体间的复杂映射
正确率并不是很高，即使应用相关的领域约束，对各种情况的映射仍然难以得到高精度的映射结果；对不同本体之间的映射，都需要进行学习训练，使用起来很麻烦；学习器的类型有限，难以处理本体中各种类型的信息；寻找到的复杂概念映 射不是完备的，很多正确的映射可能会被漏掉
将原查询重写为近似的查询
基于两本体和它们的实例，使用形式化概念分析技术FCA合并两个共享相同实例集的本体。
没有考虑复杂概念间的映射，而且该方法的实现原理决定着它无法生成关系间的映射；映射结果质量受提取共享实例过程的影响；由概念格生成合并本体的工作由于人工参与，可能产生错误的映射结果
基本原理是寻找两个局部本体间的等价，其方法是通过查看它们与一个通用的参考本体的映射。
能生成异构本体概念间的简单等价映射
一些基于实例的方法能较好地解决异构本体概念间的映射问题，但对本体关系间的映射还缺乏有效方法和具体的实现。
多种映射方法综合使用，以吸收每种方法的优势
寻找映射的过程中同时考虑了映射结果的质量与发现映射的时间复杂度，力图寻找到二者间的平衡。
QOM处理本体映射的过程共分六步，输入异构本体，进行处理后得到本体间的映射。1.特征工程 2.搜索步骤的选择 3.相似度计算 4.相似度累加 5. 解释 6. 迭代
覆盖本体所有可能的特征（如术语、结构和外延）;考虑本体结构；明确所有的循环关系，迭代寻找最佳映射。
OLA算法首先将OWL本体编码为图，图中的边为概念之间的关系。图节点之间的相 似度根据两方面来度量：①根据类和它的属性将节点进行分类；②考虑分类后节点中的所 有特征，如父类和属性等。实体之间的相似度被赋予权重并线性累加
一个知识表示的形式化、推理和Web接口。
它针对上层本体和词典，提供访问大多流行的上层本体和词典资源的接口，并表示它们之间的映射。
不能自动创建映射
通过使用组件本体和它们之间明确的映射关系解决数据库间的异构[82]，同时它能维护这些映射
本体映射依靠手工建立
支持通过小本体组成复杂本体，因而一个小本体可以在多个应用领域使用
可有效地利用本体中的语义信息、文本信息和结构信息进行本体匹配，从而得到了广泛的推广和应用
方便处理多个本体的维护和演化问题；合理组织本体间的映射，方便查询、数据转移和推理等应用；将多个本体作为一个整体来使用，能为实际应用提供更强大的功能。
从源本体中抽取一个小的子本体能让系统更有效
Wouters_C等人提出物化本体视图抽取的顺序抽取过程，通过优化模式来保证抽取质量。随后的研究者提出了一种分布式方法来降低从大的复杂本体中抽取子本体的代价。Bhatt_M等人进一步分析了这种方法的语义完整性问题Noy_N_F等提出的PROMPTFactor本体抽取工具也支持从单个本体中获得语义独立的子本体，其主要思想是通过用户选择所需要的相关术语，并与PROMPT系统进行交互抽取子本体
是尽量降低每次相似度计算的时间复杂度，即降低O(n2t)中的因素t，因此映射过程只能使用简单且速度较快的匹配器，考虑的映射线索也必须尽量简单，从而保证t接近常数O(1)
只能利用知识图谱中少量的信息构造匹配线索，得到的匹配线索不能充分反映元素语义，这会导致降低映射结果质量。
易于扩展到处理大规模知识图谱中的实例匹配，甚至可以扩展到基于概率的方法
迭代的方式来自动发现匹配规则，并逐步提高匹配规则集的质量，再利用更新后的规则集来寻找高质量的匹配对
降低相似度计算总的时间复杂度，即降低O(n2t)中的因素n2；将大规模本体划分为若干个小知识图谱，然后计算这些小知识图谱间的匹配
该系统实际上是一个大规模本体映射框架，可重用现有的匹配器和本体模块化方法
基于结构的本体划分方法；法首先通过分析概念层次、属性层次以及属性约束信息，然后利用聚类方法将本体中的元素划分为不相交的若干个集合，再利用RDF声明恢复每个集合中的语义信息，从而完成本体划分
通过一些确定的匹配点（称为锚点）自动发现更多的潜在匹配点，从而达到实现高效实例匹配的目的且无须进行知识图谱划分
由于在知识图谱中实例一般都有属性信息，所以根据属性来对实例进行划分，减少实例匹配中的匹配次数以提高匹配的效率
受数据库领域中索引分块思想的启发，实例匹配也可以借助实例相关信息进行分块 
运用了多重索引与候选集合，其中将向量空间模型和倒排索引技术相结合，实现对实例数据的划分
该方法发展了一种基于结构的划分算法，其处理过程主要包括本体划分、块匹配和匹配结果发现三个过程。这个划分算法将一个本体中的概念聚类为多个小规模的簇，然后通过分配 RDF 声明的方式来构建块。来自不同知识图谱中的块根据事先计算好的锚进行相似性匹配，在这一步中，有着高相似度的映射块将会被选择。最终，虚拟文档和结构匹配两个匹配器将会从所有的映射对中找出匹配结 果。
在匹配计算中根据当前得到的匹配结果，及时预测后继相似度计算中可跳过的位置，从而达到提高映射效率的目的
同时处理知识图谱中的本体匹配和实例匹配 
利用知识图谱中丰富的网络结构信息和实例相关的信息来训练一个分类模型，从而实现实例匹配
通过多线程和分布式并发的方法也可以有效提高实例匹配的处理效率
包含了思考、认知和理解，是认知世界的重要途径，通过已有知识推断出未知知识的过程
Analogy_Reasoning
一种自上而下的逻辑推理，是指在给定的一个或多个前提的情况下，推断出一个必然成立的结论的过程
Law_of_Syllogism
Modus_Tollens
一种自下而上的推理，是指基于已有的部分观察得出一般结论的过程
Inductive_Generalization
Statistical_Syllogism
基于对个体的观察而得出可能适用于整体的结论
将整体的统计结论应用于个体
非形式化的推理
在给定一个或多个已有观察事实O，并根据已有的知识T推断出对已有观察最简单且最有可能的解释的过程
通过寻找两者之间可以类比的信息，将已知事物上的结论迁移到新的事物上的过程
辅助推理出新的事实、新的关系、新的公理以及新的规则等；不一致性检测
描述逻辑知识库一致性检测
通过一系列规则构建Abox，以检测可满足性，或者检测某一实例是否存在某概念，基本思想类似于一阶逻辑的归结反驳
有更大的灵活性
面向知识库和数据库设计的逻辑语言
知识图谱已经存在，直接在知识图谱之上的查询
数据并不以知识图谱的形式存在，而是存在外部的数据库中的查询
Ontology-MediatedQuery_Answering,OMQ
Ontology-Based_Data_Access,OBDA
符合某个数据库架构S的一个源数据库D，S通常包括数据库表的定义和完整性约束
一个OBDA规范P=（T,M,S），其中T是本体，S是数据源模式，M是从S到T的映射
实现简单直接
生成映射得到的知识图谱M(D)，然后保存到一个三元组存储库中
当底层数据量特别大或者数据经常变化时，或者映射规则需要修改时，ETL的 成本可能很高，也需要额外的存储空间。
将在本体 层面的 SPARQL 查询重写为在原始数据库上的 SQL 查询。
兼容RDFS、OWL_2_QL、R2RML、SPARQL标准
一种前向推理系统，可以按照一定机制执行规则并达到某些目标
运行内存为事实的集合
存储当前系统中的所有事实
IF_conditions_THEN_actions，其中，conditions是由条件组成的集合，又称为LHS;actions是由动作组成的序列，又称为RHS
控制系统的执行
用规则的条件部分匹配事实集中的事实，整个LHS都被满足的规则被触发，并被加入议程
按一定的策略从被触发的多条规则中选择一条。
执行被选择出来的规则的RHS，从而操作运行内存
从被触发的规则中随机选择一条执行
选择最具体的规则
选择最近没有被触发的规则执行动作
利用了实体节点之间的路径当作特征从而进行链接预测推理
]通过改变PRA的路径特征搜索策略，促使其能够涵盖更多种语义信息的特征，主要是包含常量的图结构特征
去除了路径特征的概率计算这个需要较大计算量的过程，而是直接保留二值特征，仅记录此路径是否在两个实体之间存在，SFE首先通过随机游走采集每个实体的制定步数以内的子图特征，并记录下子图中所有的结束节点实体e，对于某个关系的训练样本实体对（h,t），如果实体ei同时存在于实体h和t的结束实体集中，那么就以ei为链接节点，将h和t对应子图中的结构生成一条h和t之间的路径
精确且可解释
规则一般包含了两个部分，分别为规则头（head）和规则主体（body），其一般形式为rule:head←body
快速有效地从大规模知识图谱上学习置信度较高的规则
support
confidence
headcoverage
满足规则主体和规则头的实例个数
规则支持度和满足规则主体的实例个数的比值，即在满足规则主体的实例中，同时也能满足规则头的实例比例。
支持度和满足规则头的实例个数的比值
将知识图谱中包括实体和关系的元素映射到一个连续的向量空间中，为每个元素学习在向量空间中表示，向量空间中的表示可以是一个或多个向量或矩阵。
让算法在学习向量表示的过程中自动捕捉、推理所需的特征
假设在任意一个知识图谱中的三元组（h,r,t），头实体的向量表示h加上关系的向量表示r应该等于尾实体的向量表示t
无法很好地表示一对多（1-N）、多对一（N-1）以及多对多（N-N）的关系
在通过关系将头实体向量翻译到尾实体向量之前，先将头实体和尾实体向量投影到一个和当前关系相关的平面上
通过拆分实体向量表示空间和关系表示向量空间来提升TransE的表达能力
用一个与实体相关的向量以及一个与关系相关的向量通过外积计算，动态地得到关系投影矩阵
将实体表示为向量，关系表示为矩阵，并将关系当作是一种向量空间中的线性变换
Mean Rank,MR
Mean Reciprocal Rank,MRR
Hit@n
从信息资源集合获得与信息需求相关的信息资源的活动
能够提供更精确的答案
Lightweight_Syntax-Centric_Model
Bag-of-Words
对主题搜索的效果很好，但不能应对更加复杂的信息检索需求
面向RDF图的结构化查询语言
核心处理单元是类似RDF三元组形式的三元组模式，但主语、谓语或宾语可以是变量
返回知识图谱中图模式匹配具体结果给用户的形式
测试知识图谱中是否存在满足给定查询约束条件的数据，结果以Yes或No的形式返回
将图模式匹配结果生成新的RDF图
查询与指定IRI相关的数据
SELECT变量1变量2…FROM 数据源WHERE{基本图模式[过滤条件]} [修饰符]。其中“SELECT”指明了查询的形式。SELECT后面的变量1变量2…表示图匹配后想要查询的具体目标。FROM指明了数据源。WHERE语句后面的大括号中就是具体的基本图模式和约束条件（FILTER字段给出）。最后的修饰符同样是可选项，主要用于对查询的结果进行一些处理，常见的有排序操作ORDER、限制结果数量操作LIMIT等。
ASK{基本图模式[条件约束]}。ASK指明了查询的形式，ASK后面的内容和SELECT中的WHERE部分类似
CONSTRUCT{图模版}WHERE{基本图模式{条件约束}}。“CONSTRUCT”指明了查询的形式。“CONSTRUCT”后面的“图模板”类似于基本图模式，指明了生成的RDF应该具有的基本三元组内容。
将新的RDF三元组插入已有的RDF图中
INSERT_DATA{RDF三元组(RDF图)}。INSERT_DATA指明了查询的形式。在INSERT_DATA后面可以是单条三元组，也可以是多条三元组构成的RDF图。在查询语法中，英文分号“;”可以用来连续插入头实体相同的三元组。
DELETE_DATA{RDF三元组(RDF图)}。其中，DELETE_DATA指明了查询的形式。在DELETE_DATA后可以是单条三元组，也可以是多条三元组构成的RDF图。
单一的数据结构和查询算法，针对文本数据进行排序检索来优化
高度可压缩、可访问，且排序是整个存储索引的组成部分
不能处理结构化查询中简单的选择、联结等操作
多种索引和查询算法，以适应各种结构化数据的复杂查询需求
能够完成复杂的选择、联结等操作，进而支持SPARQL结构化查询，并且能应对高动态场景
空间开销增大和访问有一定的局限性，并且无法集成对检索结果的排序
直接以RDF图形式的存储方式
高度可压缩，可访问类似IR的检索排序，支持选择、联结等操作，并且可在亚秒级时间内在单台机器上完成对TB级数据的查询，以及支持高动态场景
没有事务、恢复等功能
文档、词语、Posting_list、Position_list
将RDF转换成具有fields和terms的虚拟文档
给定查询输入，将其构建成复杂的结构化查询
采用知识图谱子图定位的策略
建立有效的关键词和知识图谱子图的索引，对于给定的关键字查询，首先在索引上匹配得到候选的知识图谱子图，进而实现对搜索空间的剪枝。最后，在小范围的知识图谱子图上进行搜索，找到最终的查询答案。
通过构建索引，快速定位知识图谱中包含关键词的实体。
构建一些包含结构化查询实体和关系类别的索引，在线上处理时根据类别摘要进行扩充
借助关键词中包含的查询起始和终止结点，在图上按路径搜索提高查询效率
可以解决简单的语义搜索
属性或一组分类体系或某个主题的维度或侧面
考虑特定领域的分面、分面值和计数；支持全面的浏览；支持动态分面和值的聚类
将知识图谱中的实体和关系投射到连续低维的向量空间中，同时保持原有知识图谱的基本结构和性质
连续向量空间中，可以直接进行数值型计算，对查询术语或者关键字进行扩展，效率极高。生成的实体和关系的向量在本质上是一种蕴涵语义更丰富的表示，可以进行高效率的简单查询推理。
有效、高速地进行近似语义搜索
短语到知识图谱上实体或边的映射，进而生成结构化的查询
知识图谱的核心应用之一，也是自然语言处理的重要研究方向
Question_Answering,QA
以自然语言问答为交互形式从智能体获取知识
Information_Retrieval,IR
以关键词搜索为代表，帮助用户发现包含搜索关键词的网页或文档
语义信息，例如支持查询扩展[1]、语义相似度匹配[2]以及基于知识图谱的实体识别
Database_Query
处理歧义现象
直接嵌入搜索引擎的结果页面，将问答的答案与搜索的结果列表同时展示
IntelligentAgent
帮助人们获取知识
针对问题类型，选择对应的知识库、处理逻辑来生成答案
选择有效的知识库和处理逻辑解答一类问题
帮助开发者有针对性地设计问答解决方案
基于功能的问题分类体系
问句中出现的与答案实体或属性相关的元素
Focus
反映问题是关于哪些主题的
Topic
只回答与选定领域相关的问题
基于文本表示
利用纯文本承载知识
分布式表示模型记录习得的知识
Memory_Network
将问题与知识库中的信息转化为向量表示，通过相似度匹配的方式完成问题与答案的匹配
Named_EntityRecognition
Question2Query
Answer_Processing
通过查询领域词典识别命名实体
利用语法解析（例如词性分析，Part-Of-Speech）、动词分析（包括主动和被动）以及语义映射规则等技术，将问题解析成语义查询语句
通常通过简单查询和其他复杂操作（例如Count）获取答案
将自然语言的复杂语义转化为逻辑表达式
Semantic_Parsing
是根据用户输入的问题，结合自然语言处理以及信息检索技术，在给定文档集合或者互联网网页中筛选出相关的文档，从结果文档内容抽取关键文本作为候选答案，最后对候选答案进行排序返回最优答案
Information_Retrieval_based_Question-Answering_System,IRQA
Passage_Retrieval_And_Ranking
Frequently_Asked_Question,FAQ-QA
Community_Question_Answering,CQA
主要是理解问题的类型，解析问题语义元素 等。
不仅从网络上搜索相关文档并抽取答案，还从知识库直接查询答案，然后合并构成答案候选集
针对每个候选答案选取一些重要特征，并对各个特征打分并形成答案的特征向量
首先把相同的答案进行融合，形成新的答案候选集，然后对新的答案候选集进行再排序，最终由训练好的逻辑回归分类器模型对每个候选答案计算置信度，并返回置信度最高的答案作为最终答案。
同时利用知识图谱数据和文本数据。
TriplePattern
归一融合
将问句中的关系映射到抽取三元组的谓语上
将复杂的QA系统分解为细粒度可优化的部分，而且形成了可插拔的体系，便于系统优化更新
Named_Entity_Disambiguation,NED
Relation_Linking
Class_Linking,CL
Query_Building,QB
支持流水线自动配置
QA_Pipeline_Classifier
通过一组预定的测试问题集以及一组预定的维度来评价
正确性
并非一个唯一的答案
问答之间的词表差异性
答案是否零碎地分布在不同的文本或数据集录中
问题的答案是否是某种确定性答案
问题涉及的语义复杂程度
综合正确率和召回率
第一个答案是否正确的比率
Response_Time
美国标准计量局在1999—2007年针对问答系统设定的年度评价体系，本文关注其问答的核心任务（MAIN_TASK）
答案是否正确回答了问题
答案中是否包含多余的内容
对应的文章是否支持该答案
2011—2017年的链接数据的问答系统评测（Question_Answering_onLinked_Data），为自然语言问题转化为可用的SPARQL查询以及基于语义万维网标准的知识推理提供了一系列的评价体系和测试数据集，对QALD的工作做了详细介绍
给定知识库（一个或多个RDF数据集以及其他知识源）和问题（自然语言问题或关键字），返回正确的答案或返回这些答案的SPARQL查询
斯坦福大学
精准匹配
评价问题相似度计算
ACL词汇与语义小组
推特语义分析任务
空间角色标注任务
组合名词的自由复述任务
文本蕴涵识别任务
多语种的词义消歧任务
文本语义相似度计算
情感的强弱、喜怒哀乐等类型的判断、情绪的积极消极以及识别推文中涵盖的多个情感类型
预测推文中可能嵌入的表情图片或颜文字
识别推文中的讽刺表达
识别对话中提及的所有人物
针对给定的问题，从给定文本中找出问题相关的一个事件或多个事件，以及参与角色之间的关系
关系抽取与分类
处理自然语言的歧义性和复杂性方面还显得比较薄弱
World_Model
指定词典或本体中词汇的上下位关系和关系参数类型的限制
将自然语言表达的查询语义映射知识库的原子查询
词语和句子两个层面来研究
基于知识图谱的关系抽取结果
度学习的分布式表示Embedding
Question-QuestionSimilarity
语言模型
机器翻译模型
句子主题分析模型
句子结构相似度分析模型
基于知识图谱的句子成分相似度模型等，
Template
定义了一组带变量的模板，直接匹配问题文本形成查询表达式
每个实体根据字符串相似度以及显著度获得一个打分
根据填充槽的多个实体的平均打分得到一个查询模板的分值
将自然语言问句与知识库中的本体概念建立映射
用WordNet定义知识库中标签的同义词
计算字符串间的相似度
Offline_Procedure
侧重基于问题生成模板
E-M方法计算条件概率分布P（p|t）,p为属性，t为模板
Online_Procedure
侧重模板选择
响应速度快、准确率较高，可以回答相对复杂的复合问题
模板结构通常无法与真实的用户问题相匹配
通过对自然语言查询的语法分析，将查询转换成逻辑表达式，然后利用知识库的语义信息将逻辑表达式转换成知识库查询，最终通过查询知识库得到查询结果
面向知识库的结构化查询，用于查找知识库中的实体及实体关系等知识
具备更完备、灵活的知识查询生成体系，包括带参数的原子逻辑表达式，以及基于操作组合的复杂逻辑表达式
unary
binary
将自然语言查询中的短语映射到知识库的资源
字符形式上比较相似的
可以通过字符串相似度匹配来找到映射关系
无法通过字符串匹配找到对应关系的映射
基于统计的方法来找到映射关系
自底向上自动地将自然语言查询解析为语法树，语法树的根节点即是最终对应的逻辑表达式。
补充一个额外的二元关系将词两端的逻辑表达式连接起来
逻辑表达式间的连接、求交集以及聚合三种操作
知识图谱/知识表示/知识存储/知识抽取/知识融合/知识推理/语义搜索/知识问答/知识图谱项目
训练一个分类器，计算每一种候选逻辑表达式的概率
将问题和知识库中的信息均转化为向量表示，通过向量间的相似度计算的方式完成用户问题与知识库答案的匹配
对象或概念
节点之间的关系
包含结构化信息的文档的标记语言
数据交换而设计的
XML 声明文件的可选部分，如果存在需要放在文档的第一行；XML 必须包含根元素，它是所有其他元素的父元素；XML文档由元素构成，每个元素包括开始标签、结束标签和元素内容；XML 标签对大小写敏感
避免元素命名冲突
添加前缀或者使用xmlns属性为每个前缀定义命名空间
指定如何正式描述XML文档中的元素；在应用程序之间交换XML文档时，有必要就信息的结构达成协议，包括标签和属性的名称，以及是否需要某些子元素
未命名的资源或复杂节点
列为S P O三元组，IRI在<角括号>中，三元组以.结束
为RDF数据提供数据建模词汇表；试图为RDF数据提供一致的解释；允许指定模式知识；是RDF基本词汇的扩展；
一个共享概念化的一种形式化的显式规约
Uniform Resource Identifier
scheme:[//authority]path[?query][#fragment]，scheme: type of URI, e.g. http, ftp, mailto, file, urn；authority: optional; typically a domain name；authority: optional; typically a domain name；query: optional; provides non-hierarchical information. Usually for parameters, e.g. for a web service；fragment: optional; often used to address part of a retrieved resource, e.g. section of a HTML file; the set of characters is limited to US-ASCII
only uses English characters
Uniform Resource Locator
Uniform Resource Name
International Resource Identifier
可用于机器可读数据交换
关于网站、页面等的结构元数据
类之间的等价
属性之间的等价
实体之间的等价
类之间的不相交
类之间的交集
并集
补类
对象属性,属性值是其他资源
数据属性,属性值是基本数据类型文字
具有传递性的属性
对于任何一个资源,这个属性只能有一个值
一个属性值只能对应着一个资源
逆关系
限制该属性的基数
概念、关系、个体
概念术语的公理集合
个体的断言集合
⊥ 和 ⊤都是概念;对于概念C和D,¬ C, C⊓D, 和C⊔D都是概念;对于角色r和概念C，∃r.C和∀r.C是概念
对于概念C、D，a general concept inclusion (GCI) axiom 有以下形式C ⊑ D
ABox断言可以是以下形式之一：C(a)，称为概念断言；r(a,b)，称为角色断言
unsatisfiable (inconsistent) 
如果有模型，一组公理（知识库）是可满足的（或一致的）。
incoherent
如果命名类等同于空集，则知识库是不连贯的。
从可用数据开始，并使用推理规则提取更多数据，直到达到目标
使用前向推理的推理引擎搜索推理规则，直到找到已知先行词（If子句）为真的推理规则
当找到这样的规则时，引擎可以得出结论或推断结果（then子句），从而在其数据中添加新信息
通过应用断言规则来计算所有隐式语句
Materialization
通过在TBox上应用规则来计算所有隐式子类关系。
从目标开始反向工作
一种声明逻辑编程语言
支持递归和规则编辑（更自由）进行推理
找到合适的统计模型来适应样本，并预测推断知识的预期概率。
knowledge graph embedding based reasoning
inductive rule learning based reasoning
multi-hop reasoning
预测缺失的关系
预测缺失的实体
事实预测
triples map
逻辑表通过规则映射到一组三元组
有三个部分：输入逻辑表，主语映射，几个谓词-对象映射（结合谓词和对象映射）。
Entity Linking
Column Typing
Relation Extraction
计算提及和实体之间的字符串相似性
两个单词之间的Levenshtein距离是将一个单词更改为另一个单词所需的单个字符编辑（插入、删除或替换）的最小次数
Jaccard相似度测量有限样本集A和B之间的相似性。
与基于字典的方法或基于字符串相似性的方法相结合
Local Disambiguation
Global (Collective) Disambiguation
仅使用给定提及和目标实体的上下文信息来消除歧义，而不考虑同一表中其他引用实体的影响(仅使用给定mention和目标实体(candidate entities)之间的上下文信息进行消歧。
利用候选引用实体之间的语义关联，共同消除表中提及的所有实体的歧义。(利用表内所有mention和对应候选实体之间的关联进行联合消歧）
一个文档或表中的不同mention很可能指向同一个实体,或相关实体。利用这些联系关系可以增强判断正确实体的依据
为每个给定表构建实体消歧图
Mention Nodes, Entity Nodes, Mention-Entity Edges和Entity-Entity Edges
实体链接完成之后，对于某一列的mention，如果都已经和数据库中的实体进行链接之后，可以根据上下的mention在数据库中实体的type推断该mention在数据库中实体的type（多数投票）
实体链接完成之后，对于某两列的mention，如果都已经和数据库中的实体进行链接之后，并且这两列在数据库中很多都有相同的关系，那么可以补全缺失的关系
事实是事实知识，表示为三元组，每个三元组都以<主语、谓词、对象>的形式
最有价值的知识类型之一是类型信息，它指的是陈述实例具有特定类型的公理。
可以直接从infobox的template名字中抽取来作为entity types
信息框中的属性-值对映射到概念-实例对
类型提取，从相应文章的第一句中提取每个实体的类型；类型消歧义，将提取的类型链接到纠正维基百科实体。
类型提取，从其相应文章的第一句中提取每个实体的类型。类型消歧义，将提取的类型链接到正确的维基百科实体。
第一步-预清理：第二步-基于语法的方法；第三步-基于连接的方法；第四步-基于词典语法的方法；第五步-基于推理的方法
General IS-A Relation Extraction
Terminology/ Term Extraction
一般是-a关系是更具体的单词（即hyperonym）和更一般的术语（即hyperonym）之间的语义关系
输入一个大规模预料，输出一些具有is-a关系的三元组
输入一个给定的候选的上下位词，输出判断是否存在is-a关系
假设一个下位词只出现在它的上位词的某些上下文中，而上位词出现在它的下位词的所有上下文中。
学习一个函数来衡量两个单词之间存在is-a关系的可能性
解决上下位词之间同时出现稀疏的问题
1.输入文本；2.预处理；3.术语提取；4.过滤；
1. 使用词性和正则表达式来定义NP的组成模式(Define patterns of NPs)称为NPChunker 2. 对句子中的词进行词性标注，使用NPChunker来构建句法树，得到为NP的候选术语(Find Candidate Terms using Chunker) 3. 候选术语过滤(Candidate Terms Filtering)
TF-IDF值与文档中单词的出现次数成正比，与整个语料库中单词的出现次数成反比。
用于计算NLP中单词之间的关联程度
将互联网视为有向图形，网页作为图形中的节点，网页之间的链接作为图形中的边缘。当一个网页被许多其他网页链接时，这意味着这个网页更重要，也就是说，这个网页的PR值（PageRank值）会更高。如果具有高PR值的网页链接到另一个网页，则链接网页的PR值将相应增加。
将“单词”视为“网页”。根据单词之间的共同发生来计算单词的重要性。将PageRank中的有向图转换为无向图。
不同的来源包含对同一现实世界实体的不同描述，从多个来源用不同的描述识别同一实体
它是查找不同本体的类（或属性）之间的对应关系（即关系）的过程。
从本地本体创建全局本体；在本体之间重复使用信息；处理异质性； 跨多个分布式资源的查询
单独的去分析实体或实例，忽略他们与其他的实体或实例的关系
从结构的角度来分析实体或实例
将输入本体视为标记的图形；如果两个本体的两个节点相似，它们的邻居也可能以某种方式相似
Is-a链接连接已经相似的术语，因此它们的邻居可能在某种程度上相似。
比较类实例集，以决定这些类是否匹配
根据其语义解释（例如，模型理论语义）处理输入本体；如果两个类（或属性）是相同的，那么它们共享相同的解释。
根据实体嵌入来衡量实体的相似性
在迭代中自动发现和细化特定于数据集的匹配规则
查找同一现实世界对象的不同实例的过程
Triple patterns are similar to RDF triples, but any component can be a query variable. Matching a triple pattern to a graph: bindings between variables and RDF terms.
Dataset specification
指定要查询的RDF数据集
Query pattern
WHERE子句指定要匹配的图形模式
Solution modifiers
按序输出答案
从结果集中删除重复项
首次报告结果的位置
限制结果的数量
输出描述所发现资源的RDF图（即所有RDF三元组）
输出由模板构建的RDF图
检查是否至少有一个结果
在现有的RDF图中插入新的RDF三元组
删除RDF图中的一些三元组。
移除图存储中指定图中的所有三元组。
将所有数据从输入图移动到目标图中
CREATE{node:<node1-label-name>{<Property1-name>:<Property1-Value>,........<Propertyn-name>:<Propertyn-Value>}}
CREATE(<node1-name>:<node1-label-name>{<define-properties-list>})-[<relationship-name>:<relationship-label-name>{<define-properties-list>}]->(<node2-name>:<node2-label-name>{<define-properties-list>})
MATCH(<node-name>:<label-name>{<Property1-name>:<Property1-Value>,........<Propertyn-name>:<Propertyn-Value>})-[<relationship-name>:<relationship-label-name>{<define-properties-list>}]->(<node-name>:<label-name>{<Property1-name>:<Property1-Value>,........<Propertyn-name>:<Propertyn-Value>})RETURN ........
更新图